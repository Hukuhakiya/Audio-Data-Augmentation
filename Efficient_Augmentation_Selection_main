{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "18119708",
   "metadata": {
    "papermill": {
     "duration": 0.010835,
     "end_time": "2024-09-07T19:01:18.058715",
     "exception": false,
     "start_time": "2024-09-07T19:01:18.047880",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# LIBRARY PULL"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1319c3be",
   "metadata": {
    "papermill": {
     "duration": 0.010022,
     "end_time": "2024-09-07T19:01:18.079128",
     "exception": false,
     "start_time": "2024-09-07T19:01:18.069106",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The model is a pretrained model from UrbanSound8k, and it uses 8 layers with 128 inputs in the first layer using a Keras.Sequential structure. The generic audio processing utilizes the features of the Librosa library together with the array characteristics of the Pandas and NumPy libraries. Some other visualization and training libraries are also included in the library imports as side tools or potential improvements to the script in observing the analysis and the complete characteristics of the behavior of the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f570c4e7",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:18.102053Z",
     "iopub.status.busy": "2024-09-07T19:01:18.101226Z",
     "iopub.status.idle": "2024-09-07T19:01:34.554991Z",
     "shell.execute_reply": "2024-09-07T19:01:34.553889Z"
    },
    "papermill": {
     "duration": 16.467937,
     "end_time": "2024-09-07T19:01:34.557517",
     "exception": false,
     "start_time": "2024-09-07T19:01:18.089580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting resampy\r\n",
      "  Downloading resampy-0.4.3-py3-none-any.whl.metadata (3.0 kB)\r\n",
      "Requirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from resampy) (1.26.4)\r\n",
      "Requirement already satisfied: numba>=0.53 in /opt/conda/lib/python3.10/site-packages (from resampy) (0.58.1)\r\n",
      "Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /opt/conda/lib/python3.10/site-packages (from numba>=0.53->resampy) (0.41.1)\r\n",
      "Downloading resampy-0.4.3-py3-none-any.whl (3.1 MB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m28.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: resampy\r\n",
      "Successfully installed resampy-0.4.3\r\n"
     ]
    }
   ],
   "source": [
    "# Basic Libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import random\n",
    "import time\n",
    "\n",
    "pd.plotting.register_matplotlib_converters()\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "import random\n",
    "\n",
    "from IPython.display import Audio\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "!pip install resampy "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "295f8ca9",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:34.582634Z",
     "iopub.status.busy": "2024-09-07T19:01:34.581972Z",
     "iopub.status.idle": "2024-09-07T19:01:47.111445Z",
     "shell.execute_reply": "2024-09-07T19:01:47.110604Z"
    },
    "papermill": {
     "duration": 12.54467,
     "end_time": "2024-09-07T19:01:47.113753",
     "exception": false,
     "start_time": "2024-09-07T19:01:34.569083",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-09-07 19:01:36.467083: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-09-07 19:01:36.467223: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-09-07 19:01:36.611366: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]\n"
     ]
    }
   ],
   "source": [
    "# Libraries for Classification and building Models\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Conv2D, Flatten, Dense, MaxPool2D, Dropout\n",
    "from tensorflow.keras.utils import to_categorical \n",
    "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))\n",
    "\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.svm import SVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9cf20274",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.139328Z",
     "iopub.status.busy": "2024-09-07T19:01:47.138527Z",
     "iopub.status.idle": "2024-09-07T19:01:47.268243Z",
     "shell.execute_reply": "2024-09-07T19:01:47.267480Z"
    },
    "papermill": {
     "duration": 0.144851,
     "end_time": "2024-09-07T19:01:47.270737",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.125886",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Project Specific Libraries\n",
    "import os\n",
    "import librosa\n",
    "import librosa.display\n",
    "import glob \n",
    "import skimage"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4a60502",
   "metadata": {
    "papermill": {
     "duration": 0.011154,
     "end_time": "2024-09-07T19:01:47.294658",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.283504",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# AUDIO AUGMENTATION FUNCTION DEFINITIONS"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78888df5",
   "metadata": {
    "papermill": {
     "duration": 0.011718,
     "end_time": "2024-09-07T19:01:47.317671",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.305953",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Explanations and Input Parameter Properties for Augmentation Methods\n",
    "* arrang\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a526d926",
   "metadata": {
    "papermill": {
     "duration": 0.012268,
     "end_time": "2024-09-07T19:01:47.342094",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.329826",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "288f1be2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.370053Z",
     "iopub.status.busy": "2024-09-07T19:01:47.368832Z",
     "iopub.status.idle": "2024-09-07T19:01:47.389906Z",
     "shell.execute_reply": "2024-09-07T19:01:47.388880Z"
    },
    "papermill": {
     "duration": 0.037414,
     "end_time": "2024-09-07T19:01:47.392133",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.354719",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def arrange_duration(data, sample_rate, duration, decimal = True):\n",
    "    \"\"\"\n",
    "    the function allows the manual sampling and duration specification\n",
    "    also returns the original data for further preprocessing\n",
    "    \"\"\"\n",
    "    if duration <= 0:\n",
    "        return data\n",
    "    \n",
    "    data_duration = librosa.get_duration(y = data, sr = sample_rate)\n",
    "    duration_ratio = duration / data_duration\n",
    "    \n",
    "    new_data = []\n",
    "    for i in range(int(duration_ratio)):\n",
    "        new_data = np.append(new_data, data)\n",
    "        \n",
    "    if decimal:\n",
    "        decimal_duration = int(len(data) * (duration_ratio % 1))\n",
    "        new_data = np.append(new_data, data[:decimal_duration])\n",
    "\n",
    "    return new_data\n",
    "\n",
    "def squared_norm(vector):\n",
    "    \"\"\"\n",
    "    used for SNR integration into the noise function\n",
    "    \"\"\"\n",
    "    return np.sum(np.square(vector))\n",
    "\n",
    "def add_noise(data, snr_dbs, noise_factor):\n",
    "    \"\"\"\n",
    "    white noise addition through the formulation in reference to https://pytorch.org/audio/main/generated/torchaudio.functional.add_noise.html\n",
    "    \"\"\"\n",
    "    noise = np.random.randn(len(data))\n",
    "    sq_norm_noise, sq_norm_data = squared_norm(noise), squared_norm(data)\n",
    "    noisy_data = np.sqrt((sq_norm_data/sq_norm_noise)*(10**(-snr_dbs/10)))*noise_factor*noise + data\n",
    "    return noisy_data\n",
    "\n",
    "def shift_sound(data, shift_factor):\n",
    "    \"\"\"\n",
    "    shifts the audio waveform in time domain\n",
    "    shift is randomized as per the shift_factor provided in [0,1]\n",
    "    \"\"\"\n",
    "    shift_factor = np.random.randint(0, shift_factor * len(data) + 1)\n",
    "    rolled_data = np.roll(data, shift_factor)\n",
    "    return rolled_data\n",
    "\n",
    "def shift_sound_add(data, shift_factor):\n",
    "    \"\"\"\n",
    "    adds the shifted sound onto the original audio\n",
    "    creates a reflection like effect\n",
    "    \"\"\"\n",
    "    if shift_factor != 0:\n",
    "        shift_factor = np.random.randint(0, shift_factor * len(data) + 1)\n",
    "        rolled_data = np.roll(data, shift_factor)\n",
    "        rolled_data = rolled_data + data\n",
    "        return rolled_data\n",
    "    else:\n",
    "        return data\n",
    "\n",
    "def change_pitch(data, sample_rate, pitch_factor):\n",
    "    \"\"\"\n",
    "    direct pitch change using librosa.effects library\n",
    "    \"\"\"\n",
    "    if pitch_factor != 0:\n",
    "        changed_pitch_data = librosa.effects.pitch_shift(data, sr = sample_rate, n_steps = pitch_factor)\n",
    "        return changed_pitch_data\n",
    "    else:\n",
    "        return data\n",
    "\n",
    "\n",
    "def change_speed(data, speed_rate):\n",
    "    \"\"\"\n",
    "    time stretchs through librosa.effects library, changes the processing speed rate\n",
    "    \"\"\"\n",
    "    if speed_rate !=1:\n",
    "        stretched_data = librosa.effects.time_stretch(data, rate = speed_rate)\n",
    "        return stretched_data\n",
    "    else:\n",
    "        return data\n",
    "\n",
    "\n",
    "def rand_cancel(data, crop_factor):\n",
    "    \"\"\"\n",
    "    makes some portion of the audio, either in mel-frequency or time domain vanish\n",
    "    in small portions, it is found effective augmenting the dataset\n",
    "    for a more developed version refer to doi: 10.21437/Interspeech.2019-2680\n",
    "    \"\"\"\n",
    "    if crop_factor != 0:\n",
    "        data_length = len(data)\n",
    "        lower_bound = np.random.randint(0, data_length)\n",
    "        upper_bound = min(lower_bound + round(crop_factor * data_length), data_length)  # Ensure it doesn't exceed bounds\n",
    "        rand_num = random.random() # Randomization to prevent pattern recog.\n",
    "\n",
    "        # randomization as per the different volumes\n",
    "        if 0.1 <= rand_num <= 0.95:\n",
    "            data[lower_bound:upper_bound] = 0\n",
    "\n",
    "        return data\n",
    "    else:\n",
    "        return data\n",
    "\n",
    "\n",
    "def main_effect(data, sample_rate, added_shift_factor = 0, crop_factor=0, noise_factor = 0, snr_dbs = 1, shift_factor = 0, pitch_factor = 0, speed_rate = 1, duration = 0, decimal = True):\n",
    "    \"\"\"\n",
    "    merges all the effect functions to give the complete form of the preprocessed audio data\n",
    "    \"\"\"\n",
    "    final_data = arrange_duration(\n",
    "        change_speed(change_pitch(\n",
    "            shift_sound(add_noise(\n",
    "                rand_cancel(\n",
    "                    shift_sound_add(data, added_shift_factor), crop_factor), snr_dbs, noise_factor), shift_factor), sample_rate, pitch_factor), speed_rate), sample_rate, duration, decimal)\n",
    "    return final_data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "89174248",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.418911Z",
     "iopub.status.busy": "2024-09-07T19:01:47.418588Z",
     "iopub.status.idle": "2024-09-07T19:01:47.425215Z",
     "shell.execute_reply": "2024-09-07T19:01:47.424298Z"
    },
    "papermill": {
     "duration": 0.022537,
     "end_time": "2024-09-07T19:01:47.427180",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.404643",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # testing for the augmentation corruption levels through audio listenings, going to have this through the addition of noise\n",
    "# # call the function to observe the augmented version and to display the mel spectogram, let's try to observe this on different groups of audio and\n",
    "# # different types*** of augmentation methods to determine a level to prevent possible corruption, an average low level reliable model\n",
    "# # change for possible referencing positions\n",
    "\n",
    "# def audio_inspector(data_path, aug=0):\n",
    "#     \"\"\"\n",
    "#     gives the output to mel-freq and linear-freq power spectrograms\n",
    "#     also gives the audio put in, enabling the user to play the audio\n",
    "#     \"\"\"\n",
    "#     # aug = [crop_factor, noise_factor, snr_dbs, shift_factor, pitch_factor, speed_rate]\n",
    "#     \"\"\"\n",
    "#     inspects the audio and the linear-spectogram of the audio\n",
    "#     before and after the augmentation to observe the possible corruption\n",
    "#     \"\"\"\n",
    "#     #data_path format -- 'foldX/111111-1-1-1.wav' == 'foldX/xxxxxx-x-x-x.wav'\n",
    "#     data_path = '../input/urbansound8k/' + data_path\n",
    "#     audio, sample_rate = librosa.load(data_path)\n",
    "\n",
    "#     # visualization for the clear audio\n",
    "#     plt.figure(figsize=(25, 15))\n",
    "#     audio_spec_noaug = librosa.amplitude_to_db(librosa.stft(audio), np.max)\n",
    "#     plt.subplot(4,2,1)\n",
    "#     librosa.display.specshow(audio_spec_noaug, y_axis='linear')\n",
    "#     plt.colorbar(format='%+2.0f dB')\n",
    "#     plt.title('Linear-freq Power Spectogram for the Data /wo Aug')\n",
    "\n",
    "#     display(Audio(data=audio, rate=sample_rate))\n",
    "\n",
    "#     # augmented version\n",
    "#     # aug = [crop_factor, noise_factor, snr_dbs, shift_factor, pitch_factor, speed_rate]\n",
    "#     audio_aug = main_effect(audio, sample_rate, crop_factor=aug[0], noise_factor = aug[1], \n",
    "#             snr_dbs = aug[2], shift_factor = aug[3], pitch_factor = aug[4], \n",
    "#             speed_rate = aug[5], duration = 0, decimal = True)\n",
    "\n",
    "#     # visualization for the augmented data\n",
    "#     plt.figure(figsize=(25, 15))\n",
    "#     audio_spec_aug = librosa.amplitude_to_db(librosa.stft(audio_aug), np.max)\n",
    "#     plt.subplot(4,2,1)\n",
    "#     librosa.display.specshow(audio_spec_aug, y_axis='linear')\n",
    "#     plt.colorbar(format='%+2.0f dB')\n",
    "#     plt.title('Linear-freq Power Spectogram for the Data /w Aug')\n",
    "\n",
    "#     display(Audio(data=audio_aug, rate=sample_rate))\n",
    "    \n",
    "# def plot_waveform(data, sample_rate):\n",
    "#     \"\"\"\n",
    "#     visualizes the waveform in time domain, as in amplitudes\n",
    "#     meaningful together with the frequency spectrograms\n",
    "#     \"\"\"\n",
    "#     plt.figure(figsize=(14, 5))\n",
    "#     librosa.display.waveplot(data, sr=sample_rate, alpha=0.7)\n",
    "#     plt.title('Audio Waveform')\n",
    "#     plt.xlabel('Time (s)')\n",
    "#     plt.ylabel('Amplitude')\n",
    "#     plt.grid(True)\n",
    "#     plt.tight_layout()\n",
    "#     plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "16754434",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.453152Z",
     "iopub.status.busy": "2024-09-07T19:01:47.452898Z",
     "iopub.status.idle": "2024-09-07T19:01:47.463346Z",
     "shell.execute_reply": "2024-09-07T19:01:47.462530Z"
    },
    "papermill": {
     "duration": 0.025417,
     "end_time": "2024-09-07T19:01:47.465318",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.439901",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def parser(data, added_shift_factor = 0, crop_factor = 0, crop_freq = 1, noise_factor = 0, snr_dbs = 1, shift_factor = 0, pitch_factor = 0, speed_rate = 1, duration = 0, decimal = True, aug = False):\n",
    "    \"\"\"\n",
    "    takes the cluster data and processes each audio piece one by one\n",
    "    if aug, augments the dataset as well\n",
    "    takes the mfcc, mel-frequency cepstrum, using STFT and mel-spectrogram transformation\n",
    "    creates mfcc dataset, through the means\n",
    "    \"\"\"\n",
    "    feature = []\n",
    "    label = []\n",
    "    start_time = time.time()\n",
    "    \n",
    "    for i in range(len(data)):\n",
    "        file_name = '../input/urbansound8k/fold' + str(data[\"fold\"][i]) + '/' + data[\"slice_file_name\"][i]\n",
    "        X, sample_rate = librosa.load(file_name, res_type='kaiser_fast')\n",
    "        \n",
    "        # augment the data\n",
    "        if aug:\n",
    "            X = main_effect(X, sample_rate=sample_rate, added_shift_factor=added_shift_factor, snr_dbs=snr_dbs, \n",
    "                            crop_factor=0, noise_factor=noise_factor, shift_factor=shift_factor, pitch_factor=pitch_factor, speed_rate=speed_rate, duration=duration, decimal=aug)\n",
    "            \n",
    "        # extract mfcc feature from data\n",
    "        if crop_freq: \n",
    "            # cropping in the mel-freq domain      \n",
    "            mels = np.mean(rand_cancel(data = librosa.feature.melspectrogram(y=X, sr=sample_rate), crop_factor=crop_factor).T,axis=0)\n",
    "        else:         \n",
    "            # cropping in the time domain      \n",
    "            X = rand_cancel(data=X, crop_factor=crop_factor)\n",
    "            mels = np.mean(librosa.feature.melspectrogram(y=X, sr=sample_rate).T, axis=0)\n",
    "        \n",
    "        feature.append(mels)\n",
    "        label.append(data[\"classID\"][i])\n",
    "        \n",
    "    end_time = time.time()\n",
    "    \n",
    "    return feature, label, start_time, end_time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c7ab7a39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.489038Z",
     "iopub.status.busy": "2024-09-07T19:01:47.488798Z",
     "iopub.status.idle": "2024-09-07T19:01:47.494723Z",
     "shell.execute_reply": "2024-09-07T19:01:47.493862Z"
    },
    "papermill": {
     "duration": 0.020085,
     "end_time": "2024-09-07T19:01:47.496828",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.476743",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def prepare_data(feature, label):\n",
    "    \"\"\"\n",
    "    puts the data into array formation for further ML analysis\n",
    "    split the testing and training data for training and validation processes\n",
    "    shapes as per the pretrained model\n",
    "    \"\"\"\n",
    "    X = np.array(feature)\n",
    "    Y = np.array(label)\n",
    "#     data = temp.transpose()\n",
    "    \n",
    "#     X_ = data[:, 0]\n",
    "#     Y = data[:, 1]\n",
    "#     X = np.empty([8732, 128])\n",
    "    \n",
    "#     for i in range(8732):\n",
    "#         X[i] = (X_[i])\n",
    "    \n",
    "    Y = to_categorical(Y)\n",
    "    \n",
    "    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, random_state = 1)\n",
    "    \n",
    "    X_train = X_train.reshape(-1, 16, 8, 1)\n",
    "    X_test = X_test.reshape(-1, 16, 8, 1)\n",
    "    \n",
    "    return X_train, X_test, Y_train, Y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2a7c7fa9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.520460Z",
     "iopub.status.busy": "2024-09-07T19:01:47.520200Z",
     "iopub.status.idle": "2024-09-07T19:01:47.529884Z",
     "shell.execute_reply": "2024-09-07T19:01:47.528974Z"
    },
    "papermill": {
     "duration": 0.024007,
     "end_time": "2024-09-07T19:01:47.531838",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.507831",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def train_model(train = False, model_name = \"Original_Model\", X_test = 0, X_train = 0, Y_test = 0, Y_train = 0, epochs = 90, batch_size = 30):\n",
    "    \"\"\"\n",
    "    trains the pretrained model as per the dataset given in\n",
    "    creates the model and returns the model and the training time\n",
    "    if no training is needed returns the model from specified data_path by model_name\n",
    "    \"\"\"\n",
    "    if train:\n",
    "        start_time = time.time()\n",
    "        model = Sequential()\n",
    "\n",
    "        model.add(Conv2D(64, (3, 3), padding = \"same\", activation = \"tanh\", input_shape = (16, 8, 1)))\n",
    "        model.add(MaxPool2D(pool_size=(2, 2)))\n",
    "        model.add(Conv2D(128, (3, 3), padding = \"same\", activation = \"tanh\"))\n",
    "        model.add(MaxPool2D(pool_size=(2, 2)))\n",
    "        model.add(Dropout(0.1))\n",
    "        model.add(Flatten())\n",
    "        model.add(Dense(1024, activation = \"tanh\"))\n",
    "        model.add(Dense(10, activation = \"softmax\"))\n",
    "\n",
    "        model.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n",
    "        print(epochs)\n",
    "        model.fit(x=X_train, y=Y_train, batch_size=batch_size, epochs=90, validation_data=(X_test, Y_test))\n",
    "        \n",
    "        model.save(model_name+'.keras')\n",
    "        \n",
    "        end_time = time.time()\n",
    "        training_time = (end_time-start_time)/60\n",
    "        \n",
    "        return model, training_time\n",
    "        \n",
    "    else:\n",
    "        loaded_model = tf.keras.models.load_model(model_name)\n",
    "        return loaded_model\n",
    "#     when saved will return the previous model, for the train_model is called with train=False argument later on"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "33d098cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.554830Z",
     "iopub.status.busy": "2024-09-07T19:01:47.554574Z",
     "iopub.status.idle": "2024-09-07T19:01:47.560150Z",
     "shell.execute_reply": "2024-09-07T19:01:47.559271Z"
    },
    "papermill": {
     "duration": 0.019121,
     "end_time": "2024-09-07T19:01:47.562101",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.542980",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def train_test_accuracy(model, X_train, X_test, Y_train, Y_test):\n",
    "    start_time = time.time()\n",
    "    \n",
    "    predictions = model.predict(X_test)\n",
    "    score_test = model.evaluate(X_test, Y_test)\n",
    "    \n",
    "    predictions = model.predict(X_train)\n",
    "    score_train = model.evaluate(X_train, Y_train)\n",
    "    \n",
    "    test_result = score_test[1]\n",
    "    train_result = score_train[1]\n",
    "    \n",
    "    end_time = time.time()\n",
    "    eval_time = (end_time-start_time)/60\n",
    "    \n",
    "    return train_result, test_result, eval_time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "69506e0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.585269Z",
     "iopub.status.busy": "2024-09-07T19:01:47.585000Z",
     "iopub.status.idle": "2024-09-07T19:01:47.602323Z",
     "shell.execute_reply": "2024-09-07T19:01:47.601664Z"
    },
    "papermill": {
     "duration": 0.031189,
     "end_time": "2024-09-07T19:01:47.604186",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.572997",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# testing for the augmentation corruption levels through audio listenings, going to have this through the addition of noise\n",
    "# call the function to observe the augmented version and to display the mel spectogram, let's try to observe this on different groups of audio and\n",
    "# different types*** of augmentation methods to determine a level to prevent possible corruption, an average low level reliable model\n",
    "# change for possible referencing positions\n",
    "# augmentation_list_format = [noise_flag, crop_freq_time_flag, noise_factor, shift_factor, pitch_factor, speed_rate, time_or_freq_crop_factor, reflection_factor]\n",
    "\n",
    "def audio_inspector(data_path, spectrogram_type, aug=[0, 1, 0, 0, 0, 1, 0, 0]):\n",
    "    \"\"\"\n",
    "    gives the output to mel-freq and linear-freq power spectrograms\n",
    "    also gives the audio put in, enabling the user to play the audio\n",
    "    \"\"\"\n",
    "    # aug = [crop_factor, noise_factor, snr_dbs, shift_factor, pitch_factor, speed_rate]\n",
    "    \"\"\"\n",
    "    inspects the audio and the linear-spectogram of the audio\n",
    "    before and after the augmentation to observe the possible corruption\n",
    "    \"\"\"\n",
    "    \n",
    "    #data_path format -- 'foldX/111111-1-1-1.wav' == 'foldX/xxxxxx-x-x-x.wav'\n",
    "    data_path = '../input/urbansound8k/' + data_path\n",
    "    audio, sample_rate = librosa.load(data_path)\n",
    "\n",
    "    # visualization for the clear audio\n",
    "    plt.figure(figsize=(25, 15))\n",
    "    \n",
    "    if spectrogram_type == 'mel':\n",
    "        audio_spec_noaug = librosa.feature.melspectrogram(y=audio, sr=sample_rate)\n",
    "        audio_spec_noaug = librosa.power_to_db(audio_spec_noaug, ref=np.max)\n",
    "        plt.subplot(4,2,1)\n",
    "        librosa.display.specshow(audio_spec_noaug, y_axis=spectrogram_type)\n",
    "        plt.colorbar(format='%+2.0f dB')\n",
    "        plt.title('Mel-freq Power Spectogram for the Data /wo Aug') \n",
    "    elif spectrogram_type == 'linear':\n",
    "        audio_spec_noaug = librosa.amplitude_to_db(librosa.stft(audio), np.max) \n",
    "        plt.subplot(4,2,1)\n",
    "        librosa.display.specshow(audio_spec_noaug, y_axis=spectrogram_type) # for mel spectrogram representation\n",
    "        plt.colorbar(format='%+2.0f dB')\n",
    "        plt.title('Linear-freq Power Spectogram for the Data /wo Aug')\n",
    "\n",
    "    display(Audio(data=audio, rate=sample_rate))\n",
    "\n",
    "    #augmentation for visualization\n",
    "    # augmentation_list_format = [noise_flag, crop_freq_time_flag, noise_factor, shift_factor, pitch_factor, speed_rate, time_or_freq_crop_factor, reflection_factor]\n",
    "    audio_aug = main_effect(X, sample_rate=sample_rate, added_shift_factor=added_shift_factor, \n",
    "                            snr_dbs=snr_dbs, crop_factor=0, noise_factor=noise_factor, \n",
    "                            shift_factor=shift_factor, pitch_factor=pitch_factor, speed_rate=speed_rate, duration=duration, decimal=aug)\n",
    "\n",
    "    # visualization for the augmented data\n",
    "    plt.figure(figsize=(25, 15))\n",
    "    \n",
    "    if spectrogram_type == 'mel':\n",
    "        if aug[1]:\n",
    "            audio_spec_aug = rand_cancel(librosa.feature.melspectrogram(y=audio_aug, sr=sample_rate), crop_factor=aug[0]) # for mel spectrogram representation, data crop on mel-frequency domain\n",
    "        else:\n",
    "            audio_aug = rand_cancel(data=audio_aug, crop_factor=aug[0]) # for mel spectrogram representation, data crop on time domain\n",
    "            audio_spec_aug = librosa.feature.melspectrogram(y=audio_aug, sr=sample_rate) # for mel spectrogram representation, data crop on time domain\n",
    "       \n",
    "        audio_spec_aug = librosa.power_to_db(audio_spec_aug, ref=np.max) # for mel spectrogram representation\n",
    "        plt.subplot(4,2,1)\n",
    "        librosa.display.specshow(audio_spec_aug, y_axis='mel') # for mel spectrogram representation\n",
    "        plt.colorbar(format='%+2.0f dB')\n",
    "        plt.title('Mel-freq Power Spectogram for the Data /w Aug')\n",
    "    elif spectrogram_type == 'linear':\n",
    "        audio_spec_aug = librosa.amplitude_to_db(librosa.stft(audio_aug), np.max) # for linear spectrogram representation \n",
    "        plt.subplot(4,2,1)\n",
    "        librosa.display.specshow(audio_spec_aug, y_axis='linear') # for linear spectrogram representation\n",
    "        plt.colorbar(format='%+2.0f dB')\n",
    "        plt.title('Linear-freq Power Spectogram for the Data /w Aug')\n",
    "\n",
    "    \n",
    "    display(Audio(data=audio_aug, rate=sample_rate))\n",
    "    \n",
    "def plot_waveform(data, sample_rate):\n",
    "    \"\"\"\n",
    "    visualizes the waveform in time domain, as in amplitudes\n",
    "    meaningful together with the frequency spectrograms\n",
    "    \"\"\"\n",
    "    plt.figure(figsize=(14, 5))\n",
    "    librosa.display.waveplot(data, sr=sample_rate, alpha=0.7)\n",
    "    plt.title('Audio Waveform')\n",
    "    plt.xlabel('Time (s)')\n",
    "    plt.ylabel('Amplitude')\n",
    "    plt.grid(True)\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5ed8cd8e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.627301Z",
     "iopub.status.busy": "2024-09-07T19:01:47.627036Z",
     "iopub.status.idle": "2024-09-07T19:01:47.636148Z",
     "shell.execute_reply": "2024-09-07T19:01:47.635275Z"
    },
    "papermill": {
     "duration": 0.022974,
     "end_time": "2024-09-07T19:01:47.638093",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.615119",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# augmented training and performance evaluation\n",
    "def model_trainer(data, model_name, aug_set, X_train_no_aug, Y_train_no_aug):\n",
    "    \"\"\"\n",
    "    takes in the dataFrame and the related training data from the not augmented model X_train_no_aug & Y_train_no_aug\n",
    "    also takes in a model_name and aug_set\n",
    "    gives out the model, besides the time and accuracy data of preprocessing, training and evaluation\n",
    "    \"\"\"\n",
    "    noise_flag = aug_set[0]\n",
    "    crop_freq_time_flag = aug_set[1]\n",
    "    [noise_factor, shift_factor, pitch_factor, speed_rate, time_or_freq_crop_factor, reflection_factor] = aug_set[2:]\n",
    "            \n",
    "    feature, label, start, end = parser(data, noise_factor=noise_flag, crop_freq=crop_freq_time_flag, snr_dbs=noise_factor,\n",
    "                                                    shift_factor=shift_factor, pitch_factor=pitch_factor, speed_rate=speed_rate,\n",
    "                                                    crop_factor=time_or_freq_crop_factor, added_shift_factor=reflection_factor, decimal = True, aug = True)\n",
    "    \n",
    "    X_train_aug, X_test_aug, Y_train_aug, Y_test_aug = prepare_data(feature, label)\n",
    "\n",
    "    #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "    X_train = np.concatenate((X_train_no_aug, X_train_aug), axis=0)\n",
    "    Y_train = np.concatenate((Y_train_no_aug, Y_train_aug), axis=0)\n",
    "\n",
    "    model_aug, train_time_aug = train_model(train = True, model_name = model_name, X_test = X_test, X_train = X_train, Y_test = Y_test, Y_train = Y_train, epochs = 90)\n",
    "    train_result_aug, test_result_aug, eval_time_aug = train_test_accuracy(model_aug, X_train, X_test, Y_train, Y_test)\n",
    "    dataprep_aug = (end-start)/60\n",
    "\n",
    "    print(dataprep_aug)\n",
    "    print(train_time_aug)\n",
    "    print(eval_time_aug)\n",
    "    \n",
    "    return [model_aug, test_result_aug, train_result_aug, dataprep_aug, train_time_aug, eval_time_aug]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1685fe5d",
   "metadata": {
    "collapsed": true,
    "execution": {
     "iopub.execute_input": "2024-09-07T19:01:47.663085Z",
     "iopub.status.busy": "2024-09-07T19:01:47.662795Z",
     "iopub.status.idle": "2024-09-07T19:21:02.418256Z",
     "shell.execute_reply": "2024-09-07T19:21:02.417208Z"
    },
    "jupyter": {
     "outputs_hidden": true
    },
    "papermill": {
     "duration": 1154.770181,
     "end_time": "2024-09-07T19:21:02.420270",
     "exception": false,
     "start_time": "2024-09-07T19:01:47.650089",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1323\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1103\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1523\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m 71/219\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.3283 - loss: 1.9775"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "I0000 00:00:1725736800.344508      83 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 19ms/step - accuracy: 0.4085 - loss: 1.7426 - val_accuracy: 0.5525 - val_loss: 1.3563\n",
      "Epoch 2/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.6173 - loss: 1.1452 - val_accuracy: 0.6157 - val_loss: 1.1529\n",
      "Epoch 3/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.6880 - loss: 0.9269 - val_accuracy: 0.6990 - val_loss: 0.9554\n",
      "Epoch 4/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.7240 - loss: 0.8421 - val_accuracy: 0.6963 - val_loss: 0.9299\n",
      "Epoch 5/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.7642 - loss: 0.7319 - val_accuracy: 0.6981 - val_loss: 0.9324\n",
      "Epoch 6/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.7768 - loss: 0.6691 - val_accuracy: 0.7270 - val_loss: 0.8919\n",
      "Epoch 7/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8020 - loss: 0.5789 - val_accuracy: 0.7274 - val_loss: 0.9253\n",
      "Epoch 8/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8088 - loss: 0.5770 - val_accuracy: 0.7485 - val_loss: 0.9087\n",
      "Epoch 9/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8185 - loss: 0.5244 - val_accuracy: 0.7636 - val_loss: 0.8027\n",
      "Epoch 10/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8495 - loss: 0.4622 - val_accuracy: 0.7691 - val_loss: 0.8149\n",
      "Epoch 11/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8613 - loss: 0.4164 - val_accuracy: 0.7641 - val_loss: 0.8671\n",
      "Epoch 12/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8564 - loss: 0.4324 - val_accuracy: 0.7939 - val_loss: 0.7502\n",
      "Epoch 13/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8743 - loss: 0.3903 - val_accuracy: 0.7783 - val_loss: 0.7958\n",
      "Epoch 14/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8735 - loss: 0.3798 - val_accuracy: 0.7888 - val_loss: 0.8088\n",
      "Epoch 15/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8804 - loss: 0.3472 - val_accuracy: 0.7966 - val_loss: 0.7982\n",
      "Epoch 16/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8962 - loss: 0.3228 - val_accuracy: 0.7879 - val_loss: 0.7955\n",
      "Epoch 17/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8985 - loss: 0.3124 - val_accuracy: 0.8149 - val_loss: 0.6820\n",
      "Epoch 18/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9104 - loss: 0.2687 - val_accuracy: 0.8076 - val_loss: 0.7613\n",
      "Epoch 19/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9225 - loss: 0.2386 - val_accuracy: 0.7934 - val_loss: 0.8527\n",
      "Epoch 20/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9133 - loss: 0.2655 - val_accuracy: 0.7980 - val_loss: 0.8529\n",
      "Epoch 21/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9077 - loss: 0.2709 - val_accuracy: 0.8062 - val_loss: 0.7795\n",
      "Epoch 22/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9121 - loss: 0.2571 - val_accuracy: 0.8117 - val_loss: 0.7399\n",
      "Epoch 23/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9258 - loss: 0.2256 - val_accuracy: 0.8268 - val_loss: 0.7216\n",
      "Epoch 24/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9285 - loss: 0.2049 - val_accuracy: 0.8250 - val_loss: 0.7428\n",
      "Epoch 25/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9410 - loss: 0.1822 - val_accuracy: 0.8255 - val_loss: 0.7592\n",
      "Epoch 26/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9320 - loss: 0.2014 - val_accuracy: 0.8168 - val_loss: 0.8034\n",
      "Epoch 27/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9373 - loss: 0.1963 - val_accuracy: 0.8264 - val_loss: 0.7333\n",
      "Epoch 28/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9359 - loss: 0.1867 - val_accuracy: 0.8369 - val_loss: 0.7258\n",
      "Epoch 29/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9479 - loss: 0.1547 - val_accuracy: 0.8268 - val_loss: 0.7653\n",
      "Epoch 30/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9462 - loss: 0.1437 - val_accuracy: 0.8241 - val_loss: 0.8008\n",
      "Epoch 31/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9378 - loss: 0.1733 - val_accuracy: 0.8268 - val_loss: 0.7489\n",
      "Epoch 32/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9504 - loss: 0.1417 - val_accuracy: 0.8433 - val_loss: 0.7342\n",
      "Epoch 33/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9553 - loss: 0.1356 - val_accuracy: 0.8232 - val_loss: 0.8192\n",
      "Epoch 34/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9510 - loss: 0.1394 - val_accuracy: 0.8365 - val_loss: 0.7837\n",
      "Epoch 35/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9570 - loss: 0.1325 - val_accuracy: 0.8181 - val_loss: 0.8399\n",
      "Epoch 36/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9462 - loss: 0.1686 - val_accuracy: 0.8406 - val_loss: 0.8125\n",
      "Epoch 37/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9550 - loss: 0.1377 - val_accuracy: 0.8420 - val_loss: 0.7428\n",
      "Epoch 38/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9574 - loss: 0.1254 - val_accuracy: 0.8507 - val_loss: 0.7490\n",
      "Epoch 39/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9608 - loss: 0.1205 - val_accuracy: 0.8383 - val_loss: 0.7707\n",
      "Epoch 40/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9624 - loss: 0.1068 - val_accuracy: 0.8452 - val_loss: 0.7500\n",
      "Epoch 41/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9631 - loss: 0.1105 - val_accuracy: 0.8497 - val_loss: 0.7581\n",
      "Epoch 42/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9629 - loss: 0.1118 - val_accuracy: 0.8291 - val_loss: 0.8550\n",
      "Epoch 43/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9608 - loss: 0.1100 - val_accuracy: 0.8410 - val_loss: 0.8017\n",
      "Epoch 44/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9590 - loss: 0.1162 - val_accuracy: 0.8443 - val_loss: 0.7959\n",
      "Epoch 45/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9645 - loss: 0.1103 - val_accuracy: 0.8566 - val_loss: 0.7648\n",
      "Epoch 46/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9702 - loss: 0.0845 - val_accuracy: 0.8443 - val_loss: 0.7281\n",
      "Epoch 47/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9706 - loss: 0.0873 - val_accuracy: 0.8557 - val_loss: 0.8013\n",
      "Epoch 48/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9723 - loss: 0.0908 - val_accuracy: 0.8452 - val_loss: 0.7883\n",
      "Epoch 49/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9746 - loss: 0.0785 - val_accuracy: 0.8525 - val_loss: 0.7608\n",
      "Epoch 50/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9706 - loss: 0.0892 - val_accuracy: 0.8543 - val_loss: 0.7585\n",
      "Epoch 51/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9698 - loss: 0.0876 - val_accuracy: 0.8438 - val_loss: 0.8560\n",
      "Epoch 52/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9649 - loss: 0.1001 - val_accuracy: 0.8594 - val_loss: 0.7501\n",
      "Epoch 53/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9766 - loss: 0.0737 - val_accuracy: 0.8644 - val_loss: 0.7631\n",
      "Epoch 54/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9746 - loss: 0.0710 - val_accuracy: 0.8594 - val_loss: 0.8072\n",
      "Epoch 55/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9761 - loss: 0.0685 - val_accuracy: 0.8511 - val_loss: 0.8869\n",
      "Epoch 56/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9702 - loss: 0.0904 - val_accuracy: 0.8548 - val_loss: 0.8009\n",
      "Epoch 57/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9685 - loss: 0.0921 - val_accuracy: 0.8401 - val_loss: 0.8705\n",
      "Epoch 58/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9718 - loss: 0.0815 - val_accuracy: 0.8589 - val_loss: 0.7332\n",
      "Epoch 59/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9783 - loss: 0.0639 - val_accuracy: 0.8534 - val_loss: 0.8141\n",
      "Epoch 60/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9798 - loss: 0.0640 - val_accuracy: 0.8612 - val_loss: 0.7762\n",
      "Epoch 61/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9816 - loss: 0.0537 - val_accuracy: 0.8580 - val_loss: 0.8338\n",
      "Epoch 62/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9779 - loss: 0.0610 - val_accuracy: 0.8589 - val_loss: 0.8033\n",
      "Epoch 63/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9787 - loss: 0.0595 - val_accuracy: 0.8607 - val_loss: 0.8483\n",
      "Epoch 64/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9758 - loss: 0.0703 - val_accuracy: 0.8672 - val_loss: 0.7663\n",
      "Epoch 65/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9776 - loss: 0.0668 - val_accuracy: 0.8470 - val_loss: 0.9077\n",
      "Epoch 66/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9686 - loss: 0.0974 - val_accuracy: 0.8552 - val_loss: 0.8028\n",
      "Epoch 67/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9780 - loss: 0.0698 - val_accuracy: 0.8658 - val_loss: 0.7594\n",
      "Epoch 68/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9737 - loss: 0.0724 - val_accuracy: 0.8612 - val_loss: 0.7947\n",
      "Epoch 69/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9788 - loss: 0.0684 - val_accuracy: 0.8630 - val_loss: 0.8383\n",
      "Epoch 70/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9829 - loss: 0.0538 - val_accuracy: 0.8543 - val_loss: 0.8602\n",
      "Epoch 71/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9821 - loss: 0.0569 - val_accuracy: 0.8562 - val_loss: 0.8667\n",
      "Epoch 72/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9792 - loss: 0.0540 - val_accuracy: 0.8722 - val_loss: 0.7724\n",
      "Epoch 73/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9854 - loss: 0.0414 - val_accuracy: 0.8658 - val_loss: 0.8223\n",
      "Epoch 74/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9789 - loss: 0.0554 - val_accuracy: 0.8759 - val_loss: 0.7869\n",
      "Epoch 75/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9845 - loss: 0.0480 - val_accuracy: 0.8667 - val_loss: 0.8129\n",
      "Epoch 76/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9837 - loss: 0.0521 - val_accuracy: 0.8585 - val_loss: 0.8718\n",
      "Epoch 77/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9725 - loss: 0.0842 - val_accuracy: 0.8360 - val_loss: 0.9791\n",
      "Epoch 78/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9804 - loss: 0.0596 - val_accuracy: 0.8754 - val_loss: 0.7586\n",
      "Epoch 79/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9818 - loss: 0.0627 - val_accuracy: 0.8722 - val_loss: 0.7988\n",
      "Epoch 80/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9860 - loss: 0.0403 - val_accuracy: 0.8672 - val_loss: 0.8326\n",
      "Epoch 81/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9862 - loss: 0.0427 - val_accuracy: 0.8516 - val_loss: 0.9543\n",
      "Epoch 82/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9791 - loss: 0.0569 - val_accuracy: 0.8653 - val_loss: 0.8489\n",
      "Epoch 83/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9795 - loss: 0.0617 - val_accuracy: 0.8690 - val_loss: 0.8478\n",
      "Epoch 84/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9813 - loss: 0.0556 - val_accuracy: 0.8585 - val_loss: 0.8977\n",
      "Epoch 85/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9790 - loss: 0.0678 - val_accuracy: 0.8557 - val_loss: 0.8654\n",
      "Epoch 86/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9719 - loss: 0.0870 - val_accuracy: 0.8617 - val_loss: 0.8644\n",
      "Epoch 87/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9846 - loss: 0.0471 - val_accuracy: 0.8626 - val_loss: 0.8062\n",
      "Epoch 88/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9790 - loss: 0.0565 - val_accuracy: 0.8626 - val_loss: 0.8640\n",
      "Epoch 89/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9871 - loss: 0.0425 - val_accuracy: 0.8649 - val_loss: 0.8412\n",
      "Epoch 90/90\n",
      "\u001b[1m219/219\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9885 - loss: 0.0376 - val_accuracy: 0.8713 - val_loss: 0.8022\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - accuracy: 0.8690 - loss: 0.7668\n",
      "\u001b[1m205/205\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step\n",
      "\u001b[1m205/205\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9942 - loss: 0.0204\n",
      "18.09130301872889\n",
      "1.0985614617665609\n",
      "0.054945977528889973\n"
     ]
    }
   ],
   "source": [
    "# read the original dataset\n",
    "df = pd.read_csv(\"/kaggle/input/urbansound8k/UrbanSound8K.csv\")\n",
    "\n",
    "# no augmentation, base model\n",
    "feature, label, start, end = parser(df, noise_factor=0, crop_factor=0, shift_factor=0, pitch_factor=0, speed_rate=1, decimal = True, aug = False)\n",
    "X_train, X_test, Y_train, Y_test = prepare_data(feature, label)\n",
    "\n",
    "model_noaug, train_time_noaug = train_model(train = True, model_name = \"Original_Model\", X_test = X_test, X_train = X_train, Y_test = Y_test, Y_train = Y_train, epochs = 90)\n",
    "train_result_noaug, test_result_noaug, eval_time_noaug = train_test_accuracy(model_noaug, X_train, X_test, Y_train, Y_test)\n",
    "time_elapsed_no_aug = (end-start)/60\n",
    "\n",
    "print(time_elapsed_no_aug)\n",
    "print(train_time_noaug)\n",
    "print(eval_time_noaug)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7ef3f985",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T19:21:02.653424Z",
     "iopub.status.busy": "2024-09-07T19:21:02.652679Z",
     "iopub.status.idle": "2024-09-07T23:20:14.928957Z",
     "shell.execute_reply": "2024-09-07T23:20:14.927894Z"
    },
    "papermill": {
     "duration": 14352.37236,
     "end_time": "2024-09-07T23:20:14.930933",
     "exception": false,
     "start_time": "2024-09-07T19:21:02.558573",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 12ms/step - accuracy: 0.4685 - loss: 1.5772 - val_accuracy: 0.6106 - val_loss: 1.1676\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6841 - loss: 0.9559 - val_accuracy: 0.6816 - val_loss: 0.9801\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7427 - loss: 0.7641 - val_accuracy: 0.7183 - val_loss: 0.9105\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7986 - loss: 0.6135 - val_accuracy: 0.7499 - val_loss: 0.8366\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8265 - loss: 0.5304 - val_accuracy: 0.7659 - val_loss: 0.8141\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8524 - loss: 0.4503 - val_accuracy: 0.7774 - val_loss: 0.7491\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8705 - loss: 0.3855 - val_accuracy: 0.7893 - val_loss: 0.7738\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8892 - loss: 0.3420 - val_accuracy: 0.7852 - val_loss: 0.8049\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8949 - loss: 0.3161 - val_accuracy: 0.8003 - val_loss: 0.7718\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9089 - loss: 0.2855 - val_accuracy: 0.8131 - val_loss: 0.7507\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9065 - loss: 0.2799 - val_accuracy: 0.8117 - val_loss: 0.7267\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9216 - loss: 0.2283 - val_accuracy: 0.8168 - val_loss: 0.7767\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9337 - loss: 0.1946 - val_accuracy: 0.8305 - val_loss: 0.7104\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9353 - loss: 0.1970 - val_accuracy: 0.8204 - val_loss: 0.7646\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9324 - loss: 0.1961 - val_accuracy: 0.8323 - val_loss: 0.7150\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9496 - loss: 0.1624 - val_accuracy: 0.8296 - val_loss: 0.7146\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9420 - loss: 0.1630 - val_accuracy: 0.8282 - val_loss: 0.7189\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9529 - loss: 0.1434 - val_accuracy: 0.8493 - val_loss: 0.6931\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9562 - loss: 0.1285 - val_accuracy: 0.8328 - val_loss: 0.7707\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9618 - loss: 0.1206 - val_accuracy: 0.8392 - val_loss: 0.7428\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9581 - loss: 0.1232 - val_accuracy: 0.8131 - val_loss: 0.9082\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9511 - loss: 0.1378 - val_accuracy: 0.8410 - val_loss: 0.7813\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9658 - loss: 0.1068 - val_accuracy: 0.8337 - val_loss: 0.8467\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9663 - loss: 0.0944 - val_accuracy: 0.8520 - val_loss: 0.7188\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9686 - loss: 0.0920 - val_accuracy: 0.8530 - val_loss: 0.7763\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9741 - loss: 0.0824 - val_accuracy: 0.8310 - val_loss: 0.7902\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9640 - loss: 0.1144 - val_accuracy: 0.8575 - val_loss: 0.7246\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9764 - loss: 0.0699 - val_accuracy: 0.8562 - val_loss: 0.8111\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9641 - loss: 0.1132 - val_accuracy: 0.8612 - val_loss: 0.7720\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9763 - loss: 0.0704 - val_accuracy: 0.8530 - val_loss: 0.8067\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9703 - loss: 0.0876 - val_accuracy: 0.8589 - val_loss: 0.7546\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9786 - loss: 0.0637 - val_accuracy: 0.8617 - val_loss: 0.7663\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9736 - loss: 0.0758 - val_accuracy: 0.8525 - val_loss: 0.8204\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9767 - loss: 0.0662 - val_accuracy: 0.8644 - val_loss: 0.7899\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9782 - loss: 0.0649 - val_accuracy: 0.8566 - val_loss: 0.8562\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9746 - loss: 0.0692 - val_accuracy: 0.8635 - val_loss: 0.7752\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9820 - loss: 0.0557 - val_accuracy: 0.8534 - val_loss: 0.8518\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9773 - loss: 0.0672 - val_accuracy: 0.8520 - val_loss: 0.9045\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9746 - loss: 0.0802 - val_accuracy: 0.8580 - val_loss: 0.8347\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9816 - loss: 0.0532 - val_accuracy: 0.8635 - val_loss: 0.8120\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9818 - loss: 0.0600 - val_accuracy: 0.8575 - val_loss: 0.8945\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9846 - loss: 0.0486 - val_accuracy: 0.8704 - val_loss: 0.8085\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9843 - loss: 0.0461 - val_accuracy: 0.8585 - val_loss: 0.8144\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9798 - loss: 0.0587 - val_accuracy: 0.8552 - val_loss: 0.8707\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9764 - loss: 0.0724 - val_accuracy: 0.8612 - val_loss: 0.8983\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9824 - loss: 0.0543 - val_accuracy: 0.8562 - val_loss: 0.8822\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9806 - loss: 0.0564 - val_accuracy: 0.8639 - val_loss: 0.8719\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0408 - val_accuracy: 0.8571 - val_loss: 0.8404\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9849 - loss: 0.0496 - val_accuracy: 0.8635 - val_loss: 0.8464\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9838 - loss: 0.0591 - val_accuracy: 0.8717 - val_loss: 0.7990\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9842 - loss: 0.0538 - val_accuracy: 0.8497 - val_loss: 0.9324\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9800 - loss: 0.0611 - val_accuracy: 0.8653 - val_loss: 0.8158\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0391 - val_accuracy: 0.8580 - val_loss: 0.8580\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0419 - val_accuracy: 0.8635 - val_loss: 0.8536\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0498 - val_accuracy: 0.8557 - val_loss: 0.9560\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9816 - loss: 0.0534 - val_accuracy: 0.8644 - val_loss: 0.8608\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9902 - loss: 0.0336 - val_accuracy: 0.8653 - val_loss: 0.8965\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9830 - loss: 0.0478 - val_accuracy: 0.8690 - val_loss: 0.8714\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0346 - val_accuracy: 0.8649 - val_loss: 0.9602\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9831 - loss: 0.0500 - val_accuracy: 0.8667 - val_loss: 0.9146\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9890 - loss: 0.0345 - val_accuracy: 0.8644 - val_loss: 0.8864\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9881 - loss: 0.0384 - val_accuracy: 0.8736 - val_loss: 0.8349\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9859 - loss: 0.0451 - val_accuracy: 0.8662 - val_loss: 0.9022\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9853 - loss: 0.0465 - val_accuracy: 0.8630 - val_loss: 0.9434\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9856 - loss: 0.0441 - val_accuracy: 0.8603 - val_loss: 0.9854\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9841 - loss: 0.0501 - val_accuracy: 0.8626 - val_loss: 0.9812\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0360 - val_accuracy: 0.8722 - val_loss: 0.8831\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0385 - val_accuracy: 0.8621 - val_loss: 0.9928\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9878 - loss: 0.0366 - val_accuracy: 0.8727 - val_loss: 0.8460\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9857 - loss: 0.0429 - val_accuracy: 0.8612 - val_loss: 1.0143\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9884 - loss: 0.0370 - val_accuracy: 0.8690 - val_loss: 0.9463\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9887 - loss: 0.0398 - val_accuracy: 0.8791 - val_loss: 0.8182\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9903 - loss: 0.0289 - val_accuracy: 0.8644 - val_loss: 0.9316\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0366 - val_accuracy: 0.8704 - val_loss: 0.8896\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0334 - val_accuracy: 0.8662 - val_loss: 0.9266\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9848 - loss: 0.0505 - val_accuracy: 0.8557 - val_loss: 0.9713\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9861 - loss: 0.0432 - val_accuracy: 0.8607 - val_loss: 0.9538\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9896 - loss: 0.0307 - val_accuracy: 0.8653 - val_loss: 0.9989\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9890 - loss: 0.0377 - val_accuracy: 0.8745 - val_loss: 0.8928\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9931 - loss: 0.0234 - val_accuracy: 0.8800 - val_loss: 0.8322\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9908 - loss: 0.0309 - val_accuracy: 0.8731 - val_loss: 0.8570\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0353 - val_accuracy: 0.8754 - val_loss: 0.9111\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9886 - loss: 0.0342 - val_accuracy: 0.8667 - val_loss: 0.9039\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9844 - loss: 0.0484 - val_accuracy: 0.8681 - val_loss: 0.9525\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9906 - loss: 0.0323 - val_accuracy: 0.8672 - val_loss: 0.9442\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9916 - loss: 0.0273 - val_accuracy: 0.8649 - val_loss: 0.9785\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9883 - loss: 0.0398 - val_accuracy: 0.8804 - val_loss: 0.8858\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9916 - loss: 0.0291 - val_accuracy: 0.8713 - val_loss: 0.9830\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9871 - loss: 0.0428 - val_accuracy: 0.8603 - val_loss: 1.0256\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9871 - loss: 0.0442 - val_accuracy: 0.8662 - val_loss: 0.9753\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8625 - loss: 0.9891\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9948 - loss: 0.0187\n",
      "17.150731575489043\n",
      "1.752876615524292\n",
      "0.059616545836130776\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4702 - loss: 1.5801 - val_accuracy: 0.6106 - val_loss: 1.1782\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6805 - loss: 0.9621 - val_accuracy: 0.6931 - val_loss: 0.9791\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7618 - loss: 0.7082 - val_accuracy: 0.7160 - val_loss: 0.9360\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8015 - loss: 0.6061 - val_accuracy: 0.7398 - val_loss: 0.8818\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8344 - loss: 0.5080 - val_accuracy: 0.7586 - val_loss: 0.8252\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8559 - loss: 0.4269 - val_accuracy: 0.7728 - val_loss: 0.7855\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8687 - loss: 0.3921 - val_accuracy: 0.7723 - val_loss: 0.8025\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8825 - loss: 0.3567 - val_accuracy: 0.8108 - val_loss: 0.7039\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9011 - loss: 0.3014 - val_accuracy: 0.8026 - val_loss: 0.7316\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9119 - loss: 0.2692 - val_accuracy: 0.7920 - val_loss: 0.7731\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9151 - loss: 0.2590 - val_accuracy: 0.8158 - val_loss: 0.7517\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9291 - loss: 0.2251 - val_accuracy: 0.8369 - val_loss: 0.7122\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9356 - loss: 0.2003 - val_accuracy: 0.8204 - val_loss: 0.7350\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9316 - loss: 0.2022 - val_accuracy: 0.8360 - val_loss: 0.7092\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9366 - loss: 0.1804 - val_accuracy: 0.8328 - val_loss: 0.7476\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9484 - loss: 0.1538 - val_accuracy: 0.8369 - val_loss: 0.8351\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9470 - loss: 0.1623 - val_accuracy: 0.8420 - val_loss: 0.7554\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9549 - loss: 0.1448 - val_accuracy: 0.8355 - val_loss: 0.8260\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9610 - loss: 0.1255 - val_accuracy: 0.8392 - val_loss: 0.7235\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9632 - loss: 0.1071 - val_accuracy: 0.8342 - val_loss: 0.7875\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9555 - loss: 0.1327 - val_accuracy: 0.8397 - val_loss: 0.8447\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9700 - loss: 0.0925 - val_accuracy: 0.8424 - val_loss: 0.8105\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9588 - loss: 0.1227 - val_accuracy: 0.8566 - val_loss: 0.7265\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9664 - loss: 0.1004 - val_accuracy: 0.8644 - val_loss: 0.6960\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9686 - loss: 0.0925 - val_accuracy: 0.8530 - val_loss: 0.7952\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9716 - loss: 0.0936 - val_accuracy: 0.8516 - val_loss: 0.7694\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9669 - loss: 0.0979 - val_accuracy: 0.8429 - val_loss: 0.8491\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9701 - loss: 0.0912 - val_accuracy: 0.8667 - val_loss: 0.7186\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9774 - loss: 0.0678 - val_accuracy: 0.8497 - val_loss: 0.8609\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9712 - loss: 0.0885 - val_accuracy: 0.8497 - val_loss: 0.8013\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9733 - loss: 0.0766 - val_accuracy: 0.8639 - val_loss: 0.7415\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9767 - loss: 0.0632 - val_accuracy: 0.8639 - val_loss: 0.7405\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9806 - loss: 0.0576 - val_accuracy: 0.8690 - val_loss: 0.7268\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9790 - loss: 0.0598 - val_accuracy: 0.8420 - val_loss: 0.9028\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9734 - loss: 0.0759 - val_accuracy: 0.8639 - val_loss: 0.7943\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9748 - loss: 0.0680 - val_accuracy: 0.8571 - val_loss: 0.8765\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9813 - loss: 0.0562 - val_accuracy: 0.8520 - val_loss: 0.8975\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9788 - loss: 0.0687 - val_accuracy: 0.8672 - val_loss: 0.8266\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9841 - loss: 0.0483 - val_accuracy: 0.8603 - val_loss: 0.8824\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9799 - loss: 0.0614 - val_accuracy: 0.8617 - val_loss: 0.9031\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9820 - loss: 0.0583 - val_accuracy: 0.8566 - val_loss: 0.9261\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9843 - loss: 0.0495 - val_accuracy: 0.8557 - val_loss: 0.8906\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9815 - loss: 0.0519 - val_accuracy: 0.8511 - val_loss: 0.9124\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9829 - loss: 0.0515 - val_accuracy: 0.8479 - val_loss: 0.9503\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9783 - loss: 0.0682 - val_accuracy: 0.8552 - val_loss: 0.8912\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9847 - loss: 0.0497 - val_accuracy: 0.8626 - val_loss: 0.9198\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9831 - loss: 0.0514 - val_accuracy: 0.8630 - val_loss: 0.8979\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9848 - loss: 0.0421 - val_accuracy: 0.8612 - val_loss: 0.8323\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9857 - loss: 0.0450 - val_accuracy: 0.8740 - val_loss: 0.8662\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9837 - loss: 0.0509 - val_accuracy: 0.8745 - val_loss: 0.8493\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9859 - loss: 0.0401 - val_accuracy: 0.8699 - val_loss: 0.9437\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9814 - loss: 0.0594 - val_accuracy: 0.8626 - val_loss: 0.9503\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9823 - loss: 0.0511 - val_accuracy: 0.8649 - val_loss: 0.8611\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9895 - loss: 0.0355 - val_accuracy: 0.8589 - val_loss: 0.8820\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9809 - loss: 0.0539 - val_accuracy: 0.8759 - val_loss: 0.8246\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9887 - loss: 0.0384 - val_accuracy: 0.8717 - val_loss: 0.8540\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0457 - val_accuracy: 0.8699 - val_loss: 0.8401\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9814 - loss: 0.0564 - val_accuracy: 0.8676 - val_loss: 0.8566\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9881 - loss: 0.0335 - val_accuracy: 0.8740 - val_loss: 0.8678\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9859 - loss: 0.0400 - val_accuracy: 0.8690 - val_loss: 0.8735\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0410 - val_accuracy: 0.8681 - val_loss: 0.8989\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0392 - val_accuracy: 0.8736 - val_loss: 0.8332\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9890 - loss: 0.0376 - val_accuracy: 0.8731 - val_loss: 0.8499\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9899 - loss: 0.0268 - val_accuracy: 0.8809 - val_loss: 0.8289\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9899 - loss: 0.0357 - val_accuracy: 0.8759 - val_loss: 0.8783\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9840 - loss: 0.0480 - val_accuracy: 0.8749 - val_loss: 0.9458\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9852 - loss: 0.0408 - val_accuracy: 0.8823 - val_loss: 0.8706\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9923 - loss: 0.0246 - val_accuracy: 0.8749 - val_loss: 0.8788\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9931 - loss: 0.0235 - val_accuracy: 0.8722 - val_loss: 0.9784\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9895 - loss: 0.0346 - val_accuracy: 0.8607 - val_loss: 1.0489\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9839 - loss: 0.0439 - val_accuracy: 0.8681 - val_loss: 0.9375\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9872 - loss: 0.0458 - val_accuracy: 0.8823 - val_loss: 0.8840\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9888 - loss: 0.0379 - val_accuracy: 0.8791 - val_loss: 0.8464\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9903 - loss: 0.0297 - val_accuracy: 0.8768 - val_loss: 0.8610\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9921 - loss: 0.0261 - val_accuracy: 0.8690 - val_loss: 0.9689\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9898 - loss: 0.0323 - val_accuracy: 0.8672 - val_loss: 0.9872\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9855 - loss: 0.0495 - val_accuracy: 0.8777 - val_loss: 0.9220\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9903 - loss: 0.0357 - val_accuracy: 0.8791 - val_loss: 0.9450\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9899 - loss: 0.0286 - val_accuracy: 0.8607 - val_loss: 1.0538\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9874 - loss: 0.0348 - val_accuracy: 0.8690 - val_loss: 0.9463\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9904 - loss: 0.0325 - val_accuracy: 0.8823 - val_loss: 0.8964\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9910 - loss: 0.0284 - val_accuracy: 0.8736 - val_loss: 0.9195\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9923 - loss: 0.0266 - val_accuracy: 0.8795 - val_loss: 0.9361\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9914 - loss: 0.0295 - val_accuracy: 0.8809 - val_loss: 0.9620\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9915 - loss: 0.0283 - val_accuracy: 0.8736 - val_loss: 0.9562\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9837 - loss: 0.0526 - val_accuracy: 0.8740 - val_loss: 0.9641\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9893 - loss: 0.0308 - val_accuracy: 0.8731 - val_loss: 0.9619\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9909 - loss: 0.0289 - val_accuracy: 0.8681 - val_loss: 0.9952\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9921 - loss: 0.0308 - val_accuracy: 0.8667 - val_loss: 1.0260\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9913 - loss: 0.0312 - val_accuracy: 0.8681 - val_loss: 1.0778\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8644 - loss: 1.0150\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9953 - loss: 0.0136\n",
      "16.988202039400736\n",
      "1.738558042049408\n",
      "0.05826936960220337\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1323\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1103\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1523\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90\n",
      "Epoch 1/90\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4553 - loss: 1.5982 - val_accuracy: 0.6129 - val_loss: 1.1693\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6600 - loss: 1.0196 - val_accuracy: 0.7041 - val_loss: 0.9397\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7235 - loss: 0.8100 - val_accuracy: 0.6880 - val_loss: 0.9816\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7714 - loss: 0.6911 - val_accuracy: 0.7320 - val_loss: 0.8868\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8077 - loss: 0.5775 - val_accuracy: 0.7458 - val_loss: 0.8740\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8230 - loss: 0.5374 - val_accuracy: 0.7494 - val_loss: 0.8218\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8386 - loss: 0.4759 - val_accuracy: 0.8007 - val_loss: 0.7440\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8624 - loss: 0.4066 - val_accuracy: 0.7870 - val_loss: 0.7874\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8763 - loss: 0.3656 - val_accuracy: 0.7678 - val_loss: 0.8361\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8973 - loss: 0.3277 - val_accuracy: 0.8255 - val_loss: 0.6930\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9000 - loss: 0.3017 - val_accuracy: 0.8346 - val_loss: 0.6662\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9130 - loss: 0.2668 - val_accuracy: 0.8346 - val_loss: 0.6393\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9122 - loss: 0.2648 - val_accuracy: 0.8374 - val_loss: 0.6795\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9281 - loss: 0.2151 - val_accuracy: 0.8420 - val_loss: 0.7171\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9235 - loss: 0.2253 - val_accuracy: 0.8429 - val_loss: 0.6365\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9392 - loss: 0.1850 - val_accuracy: 0.8346 - val_loss: 0.6842\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9371 - loss: 0.1930 - val_accuracy: 0.8497 - val_loss: 0.6464\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9389 - loss: 0.1745 - val_accuracy: 0.8397 - val_loss: 0.6266\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9476 - loss: 0.1534 - val_accuracy: 0.8580 - val_loss: 0.6440\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9536 - loss: 0.1344 - val_accuracy: 0.8520 - val_loss: 0.6844\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9519 - loss: 0.1428 - val_accuracy: 0.8589 - val_loss: 0.6241\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9553 - loss: 0.1351 - val_accuracy: 0.8484 - val_loss: 0.6626\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9459 - loss: 0.1626 - val_accuracy: 0.8507 - val_loss: 0.6592\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9596 - loss: 0.1268 - val_accuracy: 0.8635 - val_loss: 0.6311\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9623 - loss: 0.1149 - val_accuracy: 0.8694 - val_loss: 0.6534\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9633 - loss: 0.1073 - val_accuracy: 0.8644 - val_loss: 0.6949\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9632 - loss: 0.1095 - val_accuracy: 0.8607 - val_loss: 0.6803\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9669 - loss: 0.0897 - val_accuracy: 0.8557 - val_loss: 0.7401\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9656 - loss: 0.0925 - val_accuracy: 0.8713 - val_loss: 0.6435\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9718 - loss: 0.0830 - val_accuracy: 0.8644 - val_loss: 0.7273\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9657 - loss: 0.0963 - val_accuracy: 0.8626 - val_loss: 0.7495\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9704 - loss: 0.0879 - val_accuracy: 0.8736 - val_loss: 0.6756\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9732 - loss: 0.0766 - val_accuracy: 0.8644 - val_loss: 0.7409\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9735 - loss: 0.0734 - val_accuracy: 0.8575 - val_loss: 0.7903\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9742 - loss: 0.0770 - val_accuracy: 0.8736 - val_loss: 0.6859\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9763 - loss: 0.0686 - val_accuracy: 0.8681 - val_loss: 0.7345\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9705 - loss: 0.0930 - val_accuracy: 0.8740 - val_loss: 0.7245\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9818 - loss: 0.0553 - val_accuracy: 0.8740 - val_loss: 0.7033\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9772 - loss: 0.0652 - val_accuracy: 0.8740 - val_loss: 0.7409\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9771 - loss: 0.0680 - val_accuracy: 0.8740 - val_loss: 0.7101\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9782 - loss: 0.0670 - val_accuracy: 0.8777 - val_loss: 0.7351\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9793 - loss: 0.0559 - val_accuracy: 0.8727 - val_loss: 0.7547\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9787 - loss: 0.0655 - val_accuracy: 0.8717 - val_loss: 0.7517\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9784 - loss: 0.0599 - val_accuracy: 0.8754 - val_loss: 0.7226\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0475 - val_accuracy: 0.8786 - val_loss: 0.7483\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9791 - loss: 0.0674 - val_accuracy: 0.8781 - val_loss: 0.7035\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9787 - loss: 0.0588 - val_accuracy: 0.8607 - val_loss: 0.8043\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9801 - loss: 0.0591 - val_accuracy: 0.8699 - val_loss: 0.8316\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9832 - loss: 0.0487 - val_accuracy: 0.8772 - val_loss: 0.7268\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9838 - loss: 0.0467 - val_accuracy: 0.8809 - val_loss: 0.7673\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9851 - loss: 0.0432 - val_accuracy: 0.8557 - val_loss: 0.8886\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9780 - loss: 0.0651 - val_accuracy: 0.8594 - val_loss: 0.8366\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9826 - loss: 0.0503 - val_accuracy: 0.8786 - val_loss: 0.8565\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9900 - loss: 0.0346 - val_accuracy: 0.8818 - val_loss: 0.7529\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9831 - loss: 0.0526 - val_accuracy: 0.8681 - val_loss: 0.8878\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9843 - loss: 0.0498 - val_accuracy: 0.8777 - val_loss: 0.8152\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9842 - loss: 0.0474 - val_accuracy: 0.8768 - val_loss: 0.8422\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9849 - loss: 0.0417 - val_accuracy: 0.8713 - val_loss: 0.8360\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9854 - loss: 0.0423 - val_accuracy: 0.8768 - val_loss: 0.7655\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9831 - loss: 0.0569 - val_accuracy: 0.8630 - val_loss: 0.8340\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0433 - val_accuracy: 0.8708 - val_loss: 0.8301\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0377 - val_accuracy: 0.8727 - val_loss: 0.8159\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0466 - val_accuracy: 0.8777 - val_loss: 0.8263\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9864 - loss: 0.0431 - val_accuracy: 0.8749 - val_loss: 0.8286\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9856 - loss: 0.0427 - val_accuracy: 0.8653 - val_loss: 0.8670\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9842 - loss: 0.0488 - val_accuracy: 0.8836 - val_loss: 0.8007\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0392 - val_accuracy: 0.8814 - val_loss: 0.8283\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0384 - val_accuracy: 0.8859 - val_loss: 0.8478\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9875 - loss: 0.0436 - val_accuracy: 0.8777 - val_loss: 0.8486\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9854 - loss: 0.0434 - val_accuracy: 0.8708 - val_loss: 0.8938\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9876 - loss: 0.0379 - val_accuracy: 0.8791 - val_loss: 0.8286\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9882 - loss: 0.0347 - val_accuracy: 0.8786 - val_loss: 0.8685\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0406 - val_accuracy: 0.8749 - val_loss: 0.8338\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9875 - loss: 0.0368 - val_accuracy: 0.8749 - val_loss: 0.9241\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9895 - loss: 0.0338 - val_accuracy: 0.8708 - val_loss: 0.8719\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9836 - loss: 0.0515 - val_accuracy: 0.8690 - val_loss: 0.9391\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9868 - loss: 0.0386 - val_accuracy: 0.8745 - val_loss: 0.8701\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9875 - loss: 0.0358 - val_accuracy: 0.8754 - val_loss: 0.8529\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9871 - loss: 0.0361 - val_accuracy: 0.8832 - val_loss: 0.8156\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9883 - loss: 0.0382 - val_accuracy: 0.8846 - val_loss: 0.8262\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9944 - loss: 0.0184 - val_accuracy: 0.8763 - val_loss: 0.8703\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9850 - loss: 0.0526 - val_accuracy: 0.8823 - val_loss: 0.8454\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9852 - loss: 0.0512 - val_accuracy: 0.8736 - val_loss: 0.8905\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9915 - loss: 0.0309 - val_accuracy: 0.8759 - val_loss: 0.8733\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9908 - loss: 0.0293 - val_accuracy: 0.8818 - val_loss: 0.8337\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9872 - loss: 0.0403 - val_accuracy: 0.8704 - val_loss: 0.9568\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9875 - loss: 0.0337 - val_accuracy: 0.8759 - val_loss: 0.8752\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9901 - loss: 0.0276 - val_accuracy: 0.8827 - val_loss: 0.8566\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0426 - val_accuracy: 0.8722 - val_loss: 0.8905\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9891 - loss: 0.0362 - val_accuracy: 0.8809 - val_loss: 0.8622\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8880 - loss: 0.8018\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9942 - loss: 0.0164\n",
      "23.638467240333558\n",
      "1.73565886815389\n",
      "0.04930709997812907\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4513 - loss: 1.5981 - val_accuracy: 0.6221 - val_loss: 1.1283\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6479 - loss: 1.0539 - val_accuracy: 0.6743 - val_loss: 0.9886\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7145 - loss: 0.8542 - val_accuracy: 0.7210 - val_loss: 0.8748\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7653 - loss: 0.7127 - val_accuracy: 0.7119 - val_loss: 0.9399\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7938 - loss: 0.6141 - val_accuracy: 0.7723 - val_loss: 0.7602\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8199 - loss: 0.5368 - val_accuracy: 0.7714 - val_loss: 0.7705\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8426 - loss: 0.4698 - val_accuracy: 0.7989 - val_loss: 0.7047\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8608 - loss: 0.4266 - val_accuracy: 0.8012 - val_loss: 0.6965\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8651 - loss: 0.3948 - val_accuracy: 0.8085 - val_loss: 0.6624\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8812 - loss: 0.3493 - val_accuracy: 0.8172 - val_loss: 0.6646\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8928 - loss: 0.3189 - val_accuracy: 0.8191 - val_loss: 0.6743\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9040 - loss: 0.2787 - val_accuracy: 0.8163 - val_loss: 0.6918\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9032 - loss: 0.2760 - val_accuracy: 0.8177 - val_loss: 0.6698\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9182 - loss: 0.2357 - val_accuracy: 0.8291 - val_loss: 0.6240\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9248 - loss: 0.2158 - val_accuracy: 0.8475 - val_loss: 0.6355\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9255 - loss: 0.2173 - val_accuracy: 0.8415 - val_loss: 0.6165\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9335 - loss: 0.1939 - val_accuracy: 0.8580 - val_loss: 0.5918\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9366 - loss: 0.1922 - val_accuracy: 0.8479 - val_loss: 0.6293\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9384 - loss: 0.1846 - val_accuracy: 0.8598 - val_loss: 0.5876\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9510 - loss: 0.1454 - val_accuracy: 0.8626 - val_loss: 0.6100\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9432 - loss: 0.1623 - val_accuracy: 0.8493 - val_loss: 0.6782\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9487 - loss: 0.1443 - val_accuracy: 0.8626 - val_loss: 0.6339\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9562 - loss: 0.1246 - val_accuracy: 0.8612 - val_loss: 0.6712\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9621 - loss: 0.1111 - val_accuracy: 0.8539 - val_loss: 0.6520\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9540 - loss: 0.1254 - val_accuracy: 0.8681 - val_loss: 0.5977\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9563 - loss: 0.1220 - val_accuracy: 0.8630 - val_loss: 0.6637\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9645 - loss: 0.1080 - val_accuracy: 0.8566 - val_loss: 0.7583\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9655 - loss: 0.1064 - val_accuracy: 0.8552 - val_loss: 0.6654\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9625 - loss: 0.1013 - val_accuracy: 0.8621 - val_loss: 0.6576\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9719 - loss: 0.0848 - val_accuracy: 0.8672 - val_loss: 0.6940\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9666 - loss: 0.0949 - val_accuracy: 0.8621 - val_loss: 0.6707\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9737 - loss: 0.0799 - val_accuracy: 0.8530 - val_loss: 0.7315\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9659 - loss: 0.1007 - val_accuracy: 0.8552 - val_loss: 0.7394\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9736 - loss: 0.0840 - val_accuracy: 0.8685 - val_loss: 0.6570\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9764 - loss: 0.0683 - val_accuracy: 0.8672 - val_loss: 0.7165\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9778 - loss: 0.0643 - val_accuracy: 0.8552 - val_loss: 0.6929\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9734 - loss: 0.0853 - val_accuracy: 0.8727 - val_loss: 0.6747\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9750 - loss: 0.0730 - val_accuracy: 0.8749 - val_loss: 0.6989\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9760 - loss: 0.0718 - val_accuracy: 0.8672 - val_loss: 0.7756\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9785 - loss: 0.0632 - val_accuracy: 0.8754 - val_loss: 0.6818\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9791 - loss: 0.0587 - val_accuracy: 0.8493 - val_loss: 0.8314\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9719 - loss: 0.0863 - val_accuracy: 0.8658 - val_loss: 0.7442\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9774 - loss: 0.0617 - val_accuracy: 0.8653 - val_loss: 0.7223\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9773 - loss: 0.0685 - val_accuracy: 0.8722 - val_loss: 0.7711\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9783 - loss: 0.0627 - val_accuracy: 0.8763 - val_loss: 0.7035\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9828 - loss: 0.0512 - val_accuracy: 0.8800 - val_loss: 0.6446\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9842 - loss: 0.0475 - val_accuracy: 0.8713 - val_loss: 0.7319\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9797 - loss: 0.0556 - val_accuracy: 0.8676 - val_loss: 0.7430\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9808 - loss: 0.0572 - val_accuracy: 0.8672 - val_loss: 0.7468\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9791 - loss: 0.0663 - val_accuracy: 0.8717 - val_loss: 0.7920\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9789 - loss: 0.0586 - val_accuracy: 0.8763 - val_loss: 0.7061\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9816 - loss: 0.0529 - val_accuracy: 0.8676 - val_loss: 0.7801\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9802 - loss: 0.0615 - val_accuracy: 0.8672 - val_loss: 0.7237\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9824 - loss: 0.0592 - val_accuracy: 0.8722 - val_loss: 0.7245\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0400 - val_accuracy: 0.8722 - val_loss: 0.7324\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9793 - loss: 0.0656 - val_accuracy: 0.8667 - val_loss: 0.7734\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9835 - loss: 0.0443 - val_accuracy: 0.8676 - val_loss: 0.7820\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9871 - loss: 0.0399 - val_accuracy: 0.8617 - val_loss: 0.8384\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9844 - loss: 0.0448 - val_accuracy: 0.8795 - val_loss: 0.7291\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9841 - loss: 0.0482 - val_accuracy: 0.8745 - val_loss: 0.7967\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9855 - loss: 0.0419 - val_accuracy: 0.8644 - val_loss: 0.7847\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9820 - loss: 0.0526 - val_accuracy: 0.8717 - val_loss: 0.8322\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0362 - val_accuracy: 0.8708 - val_loss: 0.7680\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9866 - loss: 0.0387 - val_accuracy: 0.8791 - val_loss: 0.7521\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0396 - val_accuracy: 0.8786 - val_loss: 0.8362\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9859 - loss: 0.0407 - val_accuracy: 0.8717 - val_loss: 0.7478\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9861 - loss: 0.0486 - val_accuracy: 0.8662 - val_loss: 0.7596\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9846 - loss: 0.0476 - val_accuracy: 0.8681 - val_loss: 0.8844\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0467 - val_accuracy: 0.8763 - val_loss: 0.7365\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0416 - val_accuracy: 0.8754 - val_loss: 0.7501\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0435 - val_accuracy: 0.8759 - val_loss: 0.7618\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9881 - loss: 0.0325 - val_accuracy: 0.8690 - val_loss: 0.8417\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9893 - loss: 0.0369 - val_accuracy: 0.8639 - val_loss: 0.8220\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9875 - loss: 0.0359 - val_accuracy: 0.8685 - val_loss: 0.8692\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0334 - val_accuracy: 0.8699 - val_loss: 0.8490\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9854 - loss: 0.0488 - val_accuracy: 0.8736 - val_loss: 0.8333\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9872 - loss: 0.0470 - val_accuracy: 0.8722 - val_loss: 0.8416\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9854 - loss: 0.0435 - val_accuracy: 0.8704 - val_loss: 0.8642\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9899 - loss: 0.0303 - val_accuracy: 0.8548 - val_loss: 0.9282\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9825 - loss: 0.0566 - val_accuracy: 0.8759 - val_loss: 0.8191\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9874 - loss: 0.0372 - val_accuracy: 0.8717 - val_loss: 0.8255\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0377 - val_accuracy: 0.8809 - val_loss: 0.8202\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9907 - loss: 0.0333 - val_accuracy: 0.8717 - val_loss: 0.8219\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0408 - val_accuracy: 0.8759 - val_loss: 0.8416\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9881 - loss: 0.0341 - val_accuracy: 0.8791 - val_loss: 0.8128\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0357 - val_accuracy: 0.8777 - val_loss: 0.7915\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0359 - val_accuracy: 0.8740 - val_loss: 0.8496\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9896 - loss: 0.0325 - val_accuracy: 0.8690 - val_loss: 0.9403\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0448 - val_accuracy: 0.8759 - val_loss: 0.8116\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0346 - val_accuracy: 0.8777 - val_loss: 0.8577\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8796 - loss: 0.7897\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9938 - loss: 0.0346\n",
      "23.383634253342947\n",
      "1.6994065999984742\n",
      "0.047875078519185384\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4280 - loss: 1.6713 - val_accuracy: 0.5680 - val_loss: 1.3171\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6111 - loss: 1.1570 - val_accuracy: 0.6363 - val_loss: 1.1090\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6854 - loss: 0.9267 - val_accuracy: 0.7096 - val_loss: 0.9152\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7369 - loss: 0.7963 - val_accuracy: 0.7041 - val_loss: 0.9075\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7670 - loss: 0.6986 - val_accuracy: 0.7458 - val_loss: 0.8014\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7943 - loss: 0.6167 - val_accuracy: 0.7678 - val_loss: 0.7361\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8142 - loss: 0.5516 - val_accuracy: 0.7645 - val_loss: 0.7359\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8332 - loss: 0.4953 - val_accuracy: 0.7719 - val_loss: 0.7558\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8465 - loss: 0.4516 - val_accuracy: 0.7902 - val_loss: 0.7187\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8572 - loss: 0.4168 - val_accuracy: 0.7957 - val_loss: 0.6914\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8740 - loss: 0.3825 - val_accuracy: 0.7888 - val_loss: 0.7732\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8750 - loss: 0.3757 - val_accuracy: 0.7870 - val_loss: 0.7481\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8951 - loss: 0.3133 - val_accuracy: 0.8232 - val_loss: 0.6375\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8949 - loss: 0.2984 - val_accuracy: 0.8104 - val_loss: 0.7141\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9075 - loss: 0.2898 - val_accuracy: 0.8030 - val_loss: 0.7456\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9115 - loss: 0.2594 - val_accuracy: 0.8200 - val_loss: 0.6888\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9176 - loss: 0.2441 - val_accuracy: 0.8374 - val_loss: 0.6671\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9166 - loss: 0.2432 - val_accuracy: 0.8365 - val_loss: 0.6603\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9288 - loss: 0.2162 - val_accuracy: 0.8305 - val_loss: 0.6361\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9286 - loss: 0.2021 - val_accuracy: 0.8447 - val_loss: 0.6387\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9359 - loss: 0.1923 - val_accuracy: 0.8447 - val_loss: 0.6294\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9420 - loss: 0.1764 - val_accuracy: 0.8452 - val_loss: 0.6793\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9423 - loss: 0.1724 - val_accuracy: 0.8461 - val_loss: 0.6663\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9456 - loss: 0.1641 - val_accuracy: 0.8539 - val_loss: 0.6616\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9394 - loss: 0.1786 - val_accuracy: 0.8447 - val_loss: 0.6663\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9490 - loss: 0.1486 - val_accuracy: 0.8438 - val_loss: 0.7220\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9524 - loss: 0.1379 - val_accuracy: 0.8479 - val_loss: 0.6962\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9579 - loss: 0.1271 - val_accuracy: 0.8520 - val_loss: 0.6796\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9496 - loss: 0.1492 - val_accuracy: 0.8639 - val_loss: 0.6304\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9578 - loss: 0.1228 - val_accuracy: 0.8626 - val_loss: 0.6812\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9601 - loss: 0.1159 - val_accuracy: 0.8539 - val_loss: 0.6677\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9560 - loss: 0.1259 - val_accuracy: 0.8516 - val_loss: 0.6928\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9613 - loss: 0.1125 - val_accuracy: 0.8681 - val_loss: 0.6497\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9663 - loss: 0.1013 - val_accuracy: 0.8667 - val_loss: 0.6574\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9652 - loss: 0.0990 - val_accuracy: 0.8598 - val_loss: 0.6929\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9634 - loss: 0.1083 - val_accuracy: 0.8653 - val_loss: 0.6969\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9692 - loss: 0.0890 - val_accuracy: 0.8580 - val_loss: 0.7326\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9644 - loss: 0.1039 - val_accuracy: 0.8516 - val_loss: 0.7599\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9661 - loss: 0.0993 - val_accuracy: 0.8607 - val_loss: 0.7097\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9681 - loss: 0.0933 - val_accuracy: 0.8704 - val_loss: 0.7000\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9730 - loss: 0.0783 - val_accuracy: 0.8630 - val_loss: 0.7338\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9732 - loss: 0.0815 - val_accuracy: 0.8598 - val_loss: 0.7740\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9748 - loss: 0.0728 - val_accuracy: 0.8594 - val_loss: 0.7259\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9719 - loss: 0.0833 - val_accuracy: 0.8626 - val_loss: 0.7295\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9736 - loss: 0.0794 - val_accuracy: 0.8497 - val_loss: 0.8136\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9698 - loss: 0.0843 - val_accuracy: 0.8543 - val_loss: 0.7813\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9753 - loss: 0.0758 - val_accuracy: 0.8649 - val_loss: 0.7147\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9759 - loss: 0.0748 - val_accuracy: 0.8635 - val_loss: 0.7532\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9730 - loss: 0.0769 - val_accuracy: 0.8621 - val_loss: 0.7535\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9801 - loss: 0.0632 - val_accuracy: 0.8607 - val_loss: 0.7749\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9704 - loss: 0.0812 - val_accuracy: 0.8621 - val_loss: 0.8020\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9765 - loss: 0.0683 - val_accuracy: 0.8635 - val_loss: 0.8248\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9736 - loss: 0.0770 - val_accuracy: 0.8585 - val_loss: 0.8245\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9749 - loss: 0.0707 - val_accuracy: 0.8681 - val_loss: 0.7735\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9734 - loss: 0.0806 - val_accuracy: 0.8617 - val_loss: 0.8119\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9781 - loss: 0.0634 - val_accuracy: 0.8534 - val_loss: 0.8623\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9750 - loss: 0.0737 - val_accuracy: 0.8612 - val_loss: 0.8045\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9757 - loss: 0.0750 - val_accuracy: 0.8585 - val_loss: 0.8458\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9763 - loss: 0.0709 - val_accuracy: 0.8681 - val_loss: 0.7507\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9815 - loss: 0.0540 - val_accuracy: 0.8731 - val_loss: 0.7823\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9834 - loss: 0.0518 - val_accuracy: 0.8639 - val_loss: 0.7926\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9825 - loss: 0.0553 - val_accuracy: 0.8672 - val_loss: 0.8050\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9784 - loss: 0.0676 - val_accuracy: 0.8488 - val_loss: 0.9092\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9772 - loss: 0.0705 - val_accuracy: 0.8497 - val_loss: 0.8578\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9847 - loss: 0.0460 - val_accuracy: 0.8658 - val_loss: 0.8132\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9841 - loss: 0.0514 - val_accuracy: 0.8603 - val_loss: 0.8337\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9815 - loss: 0.0575 - val_accuracy: 0.8525 - val_loss: 0.8824\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0510 - val_accuracy: 0.8580 - val_loss: 0.8653\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9784 - loss: 0.0739 - val_accuracy: 0.8653 - val_loss: 0.8395\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9785 - loss: 0.0666 - val_accuracy: 0.8704 - val_loss: 0.7854\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0465 - val_accuracy: 0.8639 - val_loss: 0.8116\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9795 - loss: 0.0652 - val_accuracy: 0.8667 - val_loss: 0.7745\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9809 - loss: 0.0559 - val_accuracy: 0.8589 - val_loss: 0.8331\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9806 - loss: 0.0555 - val_accuracy: 0.8630 - val_loss: 0.8250\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0402 - val_accuracy: 0.8704 - val_loss: 0.8196\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9808 - loss: 0.0554 - val_accuracy: 0.8598 - val_loss: 0.8710\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9843 - loss: 0.0503 - val_accuracy: 0.8621 - val_loss: 0.8581\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9783 - loss: 0.0634 - val_accuracy: 0.8672 - val_loss: 0.8465\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0619 - val_accuracy: 0.8699 - val_loss: 0.7752\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9837 - loss: 0.0470 - val_accuracy: 0.8704 - val_loss: 0.8081\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9886 - loss: 0.0359 - val_accuracy: 0.8699 - val_loss: 0.8617\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0420 - val_accuracy: 0.8731 - val_loss: 0.8163\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9831 - loss: 0.0530 - val_accuracy: 0.8566 - val_loss: 0.9101\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9819 - loss: 0.0489 - val_accuracy: 0.8722 - val_loss: 0.8285\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9810 - loss: 0.0638 - val_accuracy: 0.8621 - val_loss: 0.8568\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9790 - loss: 0.0597 - val_accuracy: 0.8736 - val_loss: 0.8422\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0344 - val_accuracy: 0.8571 - val_loss: 0.9963\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9861 - loss: 0.0412 - val_accuracy: 0.8717 - val_loss: 0.8711\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9821 - loss: 0.0514 - val_accuracy: 0.8589 - val_loss: 0.9654\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9824 - loss: 0.0549 - val_accuracy: 0.8566 - val_loss: 0.9551\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8534 - loss: 0.9085\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9897 - loss: 0.0281\n",
      "22.48821877638499\n",
      "1.7066680431365966\n",
      "0.0483783483505249\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1943\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=2005\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1203\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1003\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/librosa/core/spectrum.py:266: UserWarning: n_fft=2048 is too large for input signal of length=1385\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4470 - loss: 1.6206 - val_accuracy: 0.5983 - val_loss: 1.2209\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6606 - loss: 1.0252 - val_accuracy: 0.6702 - val_loss: 0.9856\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7204 - loss: 0.8209 - val_accuracy: 0.7219 - val_loss: 0.9543\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7636 - loss: 0.7143 - val_accuracy: 0.7467 - val_loss: 0.8386\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8033 - loss: 0.5892 - val_accuracy: 0.7558 - val_loss: 0.7971\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8212 - loss: 0.5303 - val_accuracy: 0.7595 - val_loss: 0.8445\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8488 - loss: 0.4520 - val_accuracy: 0.7838 - val_loss: 0.8094\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8565 - loss: 0.4315 - val_accuracy: 0.7920 - val_loss: 0.7729\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8839 - loss: 0.3585 - val_accuracy: 0.7893 - val_loss: 0.7389\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8891 - loss: 0.3223 - val_accuracy: 0.7943 - val_loss: 0.7960\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9037 - loss: 0.2981 - val_accuracy: 0.8030 - val_loss: 0.8276\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9045 - loss: 0.2895 - val_accuracy: 0.8154 - val_loss: 0.7293\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9160 - loss: 0.2432 - val_accuracy: 0.8232 - val_loss: 0.7251\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9197 - loss: 0.2313 - val_accuracy: 0.8282 - val_loss: 0.7285\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9271 - loss: 0.2154 - val_accuracy: 0.8342 - val_loss: 0.7011\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9347 - loss: 0.1887 - val_accuracy: 0.8305 - val_loss: 0.7333\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9394 - loss: 0.1773 - val_accuracy: 0.8291 - val_loss: 0.7660\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9422 - loss: 0.1709 - val_accuracy: 0.8447 - val_loss: 0.7095\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9459 - loss: 0.1562 - val_accuracy: 0.8429 - val_loss: 0.7203\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9509 - loss: 0.1414 - val_accuracy: 0.8342 - val_loss: 0.7516\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9528 - loss: 0.1380 - val_accuracy: 0.8268 - val_loss: 0.8338\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9567 - loss: 0.1335 - val_accuracy: 0.8493 - val_loss: 0.7073\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9591 - loss: 0.1269 - val_accuracy: 0.8475 - val_loss: 0.7494\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9611 - loss: 0.1107 - val_accuracy: 0.8488 - val_loss: 0.7493\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9636 - loss: 0.1006 - val_accuracy: 0.8534 - val_loss: 0.7580\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9661 - loss: 0.1089 - val_accuracy: 0.8534 - val_loss: 0.7265\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9615 - loss: 0.1144 - val_accuracy: 0.8672 - val_loss: 0.6914\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9697 - loss: 0.0857 - val_accuracy: 0.8699 - val_loss: 0.6819\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9705 - loss: 0.0851 - val_accuracy: 0.8612 - val_loss: 0.7512\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9742 - loss: 0.0812 - val_accuracy: 0.8635 - val_loss: 0.7447\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9723 - loss: 0.0809 - val_accuracy: 0.8685 - val_loss: 0.7154\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9714 - loss: 0.0848 - val_accuracy: 0.8571 - val_loss: 0.8140\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9748 - loss: 0.0778 - val_accuracy: 0.8626 - val_loss: 0.8356\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9759 - loss: 0.0782 - val_accuracy: 0.8653 - val_loss: 0.7591\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9748 - loss: 0.0718 - val_accuracy: 0.8690 - val_loss: 0.7972\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9729 - loss: 0.0801 - val_accuracy: 0.8749 - val_loss: 0.7387\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9793 - loss: 0.0594 - val_accuracy: 0.8626 - val_loss: 0.8435\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9729 - loss: 0.0788 - val_accuracy: 0.8621 - val_loss: 0.8291\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9790 - loss: 0.0646 - val_accuracy: 0.8635 - val_loss: 0.8266\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9812 - loss: 0.0576 - val_accuracy: 0.8740 - val_loss: 0.7864\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9805 - loss: 0.0544 - val_accuracy: 0.8644 - val_loss: 0.8236\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9782 - loss: 0.0630 - val_accuracy: 0.8658 - val_loss: 0.9087\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9847 - loss: 0.0538 - val_accuracy: 0.8557 - val_loss: 0.8834\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9780 - loss: 0.0661 - val_accuracy: 0.8649 - val_loss: 0.8628\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9828 - loss: 0.0513 - val_accuracy: 0.8626 - val_loss: 0.8091\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9854 - loss: 0.0457 - val_accuracy: 0.8676 - val_loss: 0.8455\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9784 - loss: 0.0619 - val_accuracy: 0.8594 - val_loss: 0.8328\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9756 - loss: 0.0693 - val_accuracy: 0.8713 - val_loss: 0.8060\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0386 - val_accuracy: 0.8676 - val_loss: 0.8630\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9814 - loss: 0.0545 - val_accuracy: 0.8704 - val_loss: 0.7821\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9894 - loss: 0.0350 - val_accuracy: 0.8781 - val_loss: 0.7865\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9838 - loss: 0.0466 - val_accuracy: 0.8754 - val_loss: 0.8475\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9809 - loss: 0.0637 - val_accuracy: 0.8727 - val_loss: 0.8638\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9813 - loss: 0.0574 - val_accuracy: 0.8749 - val_loss: 0.8075\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9851 - loss: 0.0415 - val_accuracy: 0.8713 - val_loss: 0.8570\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9820 - loss: 0.0550 - val_accuracy: 0.8699 - val_loss: 0.8761\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9829 - loss: 0.0547 - val_accuracy: 0.8827 - val_loss: 0.8098\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9872 - loss: 0.0403 - val_accuracy: 0.8800 - val_loss: 0.8178\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0389 - val_accuracy: 0.8672 - val_loss: 0.8920\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9834 - loss: 0.0474 - val_accuracy: 0.8745 - val_loss: 0.8945\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9850 - loss: 0.0443 - val_accuracy: 0.8800 - val_loss: 0.8511\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9865 - loss: 0.0379 - val_accuracy: 0.8910 - val_loss: 0.8155\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0370 - val_accuracy: 0.8511 - val_loss: 1.0488\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9832 - loss: 0.0564 - val_accuracy: 0.8639 - val_loss: 0.9409\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9847 - loss: 0.0436 - val_accuracy: 0.8653 - val_loss: 0.8493\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9868 - loss: 0.0423 - val_accuracy: 0.8681 - val_loss: 0.8648\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9893 - loss: 0.0364 - val_accuracy: 0.8731 - val_loss: 0.8566\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9902 - loss: 0.0370 - val_accuracy: 0.8781 - val_loss: 0.9004\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9874 - loss: 0.0361 - val_accuracy: 0.8653 - val_loss: 0.9461\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0454 - val_accuracy: 0.8736 - val_loss: 0.8968\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0354 - val_accuracy: 0.8676 - val_loss: 0.9263\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9895 - loss: 0.0308 - val_accuracy: 0.8800 - val_loss: 0.8871\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0491 - val_accuracy: 0.8786 - val_loss: 0.8347\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9885 - loss: 0.0385 - val_accuracy: 0.8722 - val_loss: 0.9265\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9886 - loss: 0.0314 - val_accuracy: 0.8786 - val_loss: 0.9148\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0355 - val_accuracy: 0.8749 - val_loss: 0.8286\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9882 - loss: 0.0331 - val_accuracy: 0.8795 - val_loss: 0.8811\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0396 - val_accuracy: 0.8731 - val_loss: 0.8751\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9893 - loss: 0.0332 - val_accuracy: 0.8763 - val_loss: 0.8913\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0389 - val_accuracy: 0.8694 - val_loss: 0.9086\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9894 - loss: 0.0344 - val_accuracy: 0.8740 - val_loss: 0.9181\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0366 - val_accuracy: 0.8800 - val_loss: 0.8854\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9929 - loss: 0.0218 - val_accuracy: 0.8694 - val_loss: 0.9185\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9871 - loss: 0.0410 - val_accuracy: 0.8814 - val_loss: 0.8483\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0384 - val_accuracy: 0.8694 - val_loss: 0.9626\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0350 - val_accuracy: 0.8708 - val_loss: 0.9440\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0341 - val_accuracy: 0.8704 - val_loss: 0.9069\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9903 - loss: 0.0317 - val_accuracy: 0.8722 - val_loss: 0.8393\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9879 - loss: 0.0384 - val_accuracy: 0.8617 - val_loss: 0.9037\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0363 - val_accuracy: 0.8781 - val_loss: 0.8777\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8820 - loss: 0.8180\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9948 - loss: 0.0166\n",
      "21.191642900307972\n",
      "1.6905009508132935\n",
      "0.053617668151855466\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4494 - loss: 1.5871 - val_accuracy: 0.6354 - val_loss: 1.1312\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6630 - loss: 0.9964 - val_accuracy: 0.6913 - val_loss: 0.9796\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7416 - loss: 0.7816 - val_accuracy: 0.7201 - val_loss: 0.9159\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7921 - loss: 0.6321 - val_accuracy: 0.7481 - val_loss: 0.8536\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8167 - loss: 0.5642 - val_accuracy: 0.7787 - val_loss: 0.7569\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8424 - loss: 0.4827 - val_accuracy: 0.7842 - val_loss: 0.7948\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8640 - loss: 0.4151 - val_accuracy: 0.7902 - val_loss: 0.7173\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8764 - loss: 0.3707 - val_accuracy: 0.7971 - val_loss: 0.7416\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8967 - loss: 0.3233 - val_accuracy: 0.7765 - val_loss: 0.8824\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8962 - loss: 0.3196 - val_accuracy: 0.8204 - val_loss: 0.6921\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9113 - loss: 0.2669 - val_accuracy: 0.8246 - val_loss: 0.7013\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9201 - loss: 0.2428 - val_accuracy: 0.8213 - val_loss: 0.7093\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9221 - loss: 0.2394 - val_accuracy: 0.8333 - val_loss: 0.7018\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9267 - loss: 0.2156 - val_accuracy: 0.8323 - val_loss: 0.7612\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9389 - loss: 0.1799 - val_accuracy: 0.8355 - val_loss: 0.7057\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9428 - loss: 0.1784 - val_accuracy: 0.8186 - val_loss: 0.7873\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9358 - loss: 0.1900 - val_accuracy: 0.8346 - val_loss: 0.7702\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9479 - loss: 0.1529 - val_accuracy: 0.8365 - val_loss: 0.7176\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9544 - loss: 0.1401 - val_accuracy: 0.8323 - val_loss: 0.7243\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9511 - loss: 0.1475 - val_accuracy: 0.8328 - val_loss: 0.7975\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9570 - loss: 0.1314 - val_accuracy: 0.8571 - val_loss: 0.7392\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9588 - loss: 0.1154 - val_accuracy: 0.8443 - val_loss: 0.7171\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9645 - loss: 0.1064 - val_accuracy: 0.8511 - val_loss: 0.6942\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9564 - loss: 0.1337 - val_accuracy: 0.8456 - val_loss: 0.7167\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9664 - loss: 0.0992 - val_accuracy: 0.8484 - val_loss: 0.7911\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9657 - loss: 0.0990 - val_accuracy: 0.8456 - val_loss: 0.7958\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9610 - loss: 0.1195 - val_accuracy: 0.8497 - val_loss: 0.7698\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9664 - loss: 0.1051 - val_accuracy: 0.8452 - val_loss: 0.7987\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9766 - loss: 0.0731 - val_accuracy: 0.8594 - val_loss: 0.7587\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9767 - loss: 0.0696 - val_accuracy: 0.8548 - val_loss: 0.7495\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9737 - loss: 0.0816 - val_accuracy: 0.8607 - val_loss: 0.7974\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9745 - loss: 0.0774 - val_accuracy: 0.8562 - val_loss: 0.8235\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9713 - loss: 0.0884 - val_accuracy: 0.8502 - val_loss: 0.8004\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9726 - loss: 0.0819 - val_accuracy: 0.8511 - val_loss: 0.7567\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9763 - loss: 0.0699 - val_accuracy: 0.8530 - val_loss: 0.8152\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9784 - loss: 0.0621 - val_accuracy: 0.8607 - val_loss: 0.7875\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9795 - loss: 0.0607 - val_accuracy: 0.8580 - val_loss: 0.8391\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9751 - loss: 0.0752 - val_accuracy: 0.8562 - val_loss: 0.8021\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9812 - loss: 0.0576 - val_accuracy: 0.8552 - val_loss: 0.8594\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9841 - loss: 0.0500 - val_accuracy: 0.8571 - val_loss: 0.8329\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0558 - val_accuracy: 0.8571 - val_loss: 0.8777\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9734 - loss: 0.0712 - val_accuracy: 0.8479 - val_loss: 0.8584\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9780 - loss: 0.0700 - val_accuracy: 0.8598 - val_loss: 0.8560\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9821 - loss: 0.0531 - val_accuracy: 0.8607 - val_loss: 0.8240\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9838 - loss: 0.0498 - val_accuracy: 0.8603 - val_loss: 0.8150\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9806 - loss: 0.0561 - val_accuracy: 0.8672 - val_loss: 0.7755\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9809 - loss: 0.0557 - val_accuracy: 0.8575 - val_loss: 0.8385\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9855 - loss: 0.0435 - val_accuracy: 0.8598 - val_loss: 0.8300\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0493 - val_accuracy: 0.8603 - val_loss: 0.8854\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0433 - val_accuracy: 0.8585 - val_loss: 0.9154\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9781 - loss: 0.0687 - val_accuracy: 0.8603 - val_loss: 0.8509\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9847 - loss: 0.0439 - val_accuracy: 0.8672 - val_loss: 0.7955\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9853 - loss: 0.0501 - val_accuracy: 0.8672 - val_loss: 0.8090\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9759 - loss: 0.0710 - val_accuracy: 0.8731 - val_loss: 0.8016\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0375 - val_accuracy: 0.8598 - val_loss: 0.8441\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0407 - val_accuracy: 0.8653 - val_loss: 0.8824\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9851 - loss: 0.0428 - val_accuracy: 0.8598 - val_loss: 0.9230\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0437 - val_accuracy: 0.8630 - val_loss: 0.8759\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9825 - loss: 0.0487 - val_accuracy: 0.8717 - val_loss: 0.8140\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9879 - loss: 0.0384 - val_accuracy: 0.8548 - val_loss: 0.9487\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9876 - loss: 0.0342 - val_accuracy: 0.8667 - val_loss: 0.8858\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9830 - loss: 0.0568 - val_accuracy: 0.8644 - val_loss: 0.8756\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9903 - loss: 0.0317 - val_accuracy: 0.8589 - val_loss: 0.9095\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9876 - loss: 0.0454 - val_accuracy: 0.8667 - val_loss: 0.9003\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9851 - loss: 0.0420 - val_accuracy: 0.8594 - val_loss: 0.9548\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9848 - loss: 0.0512 - val_accuracy: 0.8649 - val_loss: 0.9322\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9890 - loss: 0.0320 - val_accuracy: 0.8644 - val_loss: 0.9253\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9879 - loss: 0.0367 - val_accuracy: 0.8594 - val_loss: 0.9191\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0389 - val_accuracy: 0.8594 - val_loss: 0.9141\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0431 - val_accuracy: 0.8598 - val_loss: 0.9229\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9886 - loss: 0.0363 - val_accuracy: 0.8589 - val_loss: 0.9874\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0507 - val_accuracy: 0.8690 - val_loss: 0.9237\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0394 - val_accuracy: 0.8676 - val_loss: 0.8950\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0359 - val_accuracy: 0.8635 - val_loss: 0.9970\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9894 - loss: 0.0314 - val_accuracy: 0.8580 - val_loss: 1.0134\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9882 - loss: 0.0379 - val_accuracy: 0.8639 - val_loss: 0.9405\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9910 - loss: 0.0348 - val_accuracy: 0.8662 - val_loss: 0.9445\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9899 - loss: 0.0326 - val_accuracy: 0.8639 - val_loss: 1.0519\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0577 - val_accuracy: 0.8598 - val_loss: 0.9743\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9894 - loss: 0.0332 - val_accuracy: 0.8649 - val_loss: 0.9907\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9874 - loss: 0.0443 - val_accuracy: 0.8736 - val_loss: 0.8754\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9886 - loss: 0.0337 - val_accuracy: 0.8580 - val_loss: 0.9891\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0330 - val_accuracy: 0.8557 - val_loss: 1.0113\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9887 - loss: 0.0303 - val_accuracy: 0.8727 - val_loss: 0.9678\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9926 - loss: 0.0234 - val_accuracy: 0.8722 - val_loss: 0.9870\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9902 - loss: 0.0284 - val_accuracy: 0.8685 - val_loss: 0.9987\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0420 - val_accuracy: 0.8562 - val_loss: 1.1459\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0423 - val_accuracy: 0.8621 - val_loss: 1.0576\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9866 - loss: 0.0458 - val_accuracy: 0.8635 - val_loss: 1.0268\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9890 - loss: 0.0355 - val_accuracy: 0.8658 - val_loss: 1.0082\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8693 - loss: 0.8953\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9925 - loss: 0.0307\n",
      "15.46851323445638\n",
      "1.7048334042231241\n",
      "0.047802285353342695\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4462 - loss: 1.6240 - val_accuracy: 0.6326 - val_loss: 1.1041\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6522 - loss: 1.0322 - val_accuracy: 0.6775 - val_loss: 0.9735\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7346 - loss: 0.8202 - val_accuracy: 0.7371 - val_loss: 0.8570\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7721 - loss: 0.6819 - val_accuracy: 0.7517 - val_loss: 0.8192\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8020 - loss: 0.6007 - val_accuracy: 0.7476 - val_loss: 0.8580\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8237 - loss: 0.5233 - val_accuracy: 0.7801 - val_loss: 0.7654\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8509 - loss: 0.4542 - val_accuracy: 0.7815 - val_loss: 0.7368\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8663 - loss: 0.4090 - val_accuracy: 0.7746 - val_loss: 0.7551\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8777 - loss: 0.3814 - val_accuracy: 0.7929 - val_loss: 0.7557\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8961 - loss: 0.3170 - val_accuracy: 0.7966 - val_loss: 0.7334\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8971 - loss: 0.3012 - val_accuracy: 0.8163 - val_loss: 0.6990\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9112 - loss: 0.2734 - val_accuracy: 0.7984 - val_loss: 0.8949\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9075 - loss: 0.2649 - val_accuracy: 0.8346 - val_loss: 0.6576\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9293 - loss: 0.2164 - val_accuracy: 0.8410 - val_loss: 0.6775\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9345 - loss: 0.2028 - val_accuracy: 0.8346 - val_loss: 0.6920\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9354 - loss: 0.1915 - val_accuracy: 0.8406 - val_loss: 0.6679\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9396 - loss: 0.1901 - val_accuracy: 0.8328 - val_loss: 0.6834\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9378 - loss: 0.1765 - val_accuracy: 0.8465 - val_loss: 0.7000\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9524 - loss: 0.1373 - val_accuracy: 0.8360 - val_loss: 0.7402\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9535 - loss: 0.1443 - val_accuracy: 0.8479 - val_loss: 0.7596\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9518 - loss: 0.1439 - val_accuracy: 0.8493 - val_loss: 0.6936\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9542 - loss: 0.1334 - val_accuracy: 0.8433 - val_loss: 0.7306\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9598 - loss: 0.1206 - val_accuracy: 0.8447 - val_loss: 0.7239\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9624 - loss: 0.1176 - val_accuracy: 0.8479 - val_loss: 0.7847\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9582 - loss: 0.1184 - val_accuracy: 0.8571 - val_loss: 0.7318\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9671 - loss: 0.0928 - val_accuracy: 0.8484 - val_loss: 0.7704\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9668 - loss: 0.1040 - val_accuracy: 0.8552 - val_loss: 0.7776\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9691 - loss: 0.0964 - val_accuracy: 0.8639 - val_loss: 0.7346\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9729 - loss: 0.0812 - val_accuracy: 0.8575 - val_loss: 0.7583\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9716 - loss: 0.0864 - val_accuracy: 0.8598 - val_loss: 0.7543\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9655 - loss: 0.1040 - val_accuracy: 0.8443 - val_loss: 0.8274\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9719 - loss: 0.0820 - val_accuracy: 0.8635 - val_loss: 0.7733\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9730 - loss: 0.0791 - val_accuracy: 0.8644 - val_loss: 0.7377\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9730 - loss: 0.0782 - val_accuracy: 0.8585 - val_loss: 0.7637\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9780 - loss: 0.0723 - val_accuracy: 0.8612 - val_loss: 0.7722\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9787 - loss: 0.0675 - val_accuracy: 0.8470 - val_loss: 0.8549\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9708 - loss: 0.0800 - val_accuracy: 0.8539 - val_loss: 0.8774\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9753 - loss: 0.0662 - val_accuracy: 0.8575 - val_loss: 0.7785\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9789 - loss: 0.0621 - val_accuracy: 0.8566 - val_loss: 0.8097\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9859 - loss: 0.0428 - val_accuracy: 0.8530 - val_loss: 0.8497\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9820 - loss: 0.0545 - val_accuracy: 0.8497 - val_loss: 0.8879\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9699 - loss: 0.0884 - val_accuracy: 0.8479 - val_loss: 0.8358\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9786 - loss: 0.0646 - val_accuracy: 0.8630 - val_loss: 0.7850\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9841 - loss: 0.0493 - val_accuracy: 0.8639 - val_loss: 0.8079\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9808 - loss: 0.0610 - val_accuracy: 0.8552 - val_loss: 0.8537\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0604 - val_accuracy: 0.8589 - val_loss: 0.8618\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0544 - val_accuracy: 0.8690 - val_loss: 0.7768\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9849 - loss: 0.0459 - val_accuracy: 0.8681 - val_loss: 0.8429\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9829 - loss: 0.0532 - val_accuracy: 0.8589 - val_loss: 0.8783\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9791 - loss: 0.0703 - val_accuracy: 0.8438 - val_loss: 0.9723\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9823 - loss: 0.0602 - val_accuracy: 0.8539 - val_loss: 0.8945\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0405 - val_accuracy: 0.8571 - val_loss: 0.8231\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9872 - loss: 0.0404 - val_accuracy: 0.8598 - val_loss: 0.8798\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9778 - loss: 0.0720 - val_accuracy: 0.8552 - val_loss: 0.9391\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9818 - loss: 0.0521 - val_accuracy: 0.8566 - val_loss: 0.8684\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9840 - loss: 0.0518 - val_accuracy: 0.8603 - val_loss: 0.9031\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9825 - loss: 0.0558 - val_accuracy: 0.8612 - val_loss: 0.9077\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0410 - val_accuracy: 0.8598 - val_loss: 0.9203\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0402 - val_accuracy: 0.8562 - val_loss: 0.9420\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9783 - loss: 0.0692 - val_accuracy: 0.8612 - val_loss: 0.9397\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9837 - loss: 0.0513 - val_accuracy: 0.8653 - val_loss: 0.8695\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9898 - loss: 0.0301 - val_accuracy: 0.8589 - val_loss: 0.9353\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0606 - val_accuracy: 0.8667 - val_loss: 0.8225\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9852 - loss: 0.0425 - val_accuracy: 0.8649 - val_loss: 0.9046\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9865 - loss: 0.0448 - val_accuracy: 0.8612 - val_loss: 0.9094\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0386 - val_accuracy: 0.8736 - val_loss: 0.8515\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9878 - loss: 0.0367 - val_accuracy: 0.8621 - val_loss: 0.9470\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0412 - val_accuracy: 0.8589 - val_loss: 0.9303\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9861 - loss: 0.0486 - val_accuracy: 0.8653 - val_loss: 0.9150\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9836 - loss: 0.0443 - val_accuracy: 0.8626 - val_loss: 0.9726\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9851 - loss: 0.0441 - val_accuracy: 0.8667 - val_loss: 0.9418\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0310 - val_accuracy: 0.8685 - val_loss: 0.9037\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9901 - loss: 0.0301 - val_accuracy: 0.8644 - val_loss: 0.9267\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0318 - val_accuracy: 0.8557 - val_loss: 0.9409\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9815 - loss: 0.0555 - val_accuracy: 0.8649 - val_loss: 1.0103\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9847 - loss: 0.0454 - val_accuracy: 0.8662 - val_loss: 1.0178\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9878 - loss: 0.0449 - val_accuracy: 0.8649 - val_loss: 1.0163\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9853 - loss: 0.0425 - val_accuracy: 0.8658 - val_loss: 0.9516\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9898 - loss: 0.0321 - val_accuracy: 0.8626 - val_loss: 0.9726\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0399 - val_accuracy: 0.8470 - val_loss: 1.0989\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9830 - loss: 0.0592 - val_accuracy: 0.8589 - val_loss: 1.0057\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9901 - loss: 0.0328 - val_accuracy: 0.8598 - val_loss: 0.9942\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0400 - val_accuracy: 0.8694 - val_loss: 0.9128\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9938 - loss: 0.0221 - val_accuracy: 0.8699 - val_loss: 0.8920\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9906 - loss: 0.0333 - val_accuracy: 0.8626 - val_loss: 0.9462\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9882 - loss: 0.0461 - val_accuracy: 0.8653 - val_loss: 1.0253\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9850 - loss: 0.0489 - val_accuracy: 0.8626 - val_loss: 0.9985\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9875 - loss: 0.0369 - val_accuracy: 0.8630 - val_loss: 1.0427\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9890 - loss: 0.0340 - val_accuracy: 0.8571 - val_loss: 1.0288\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9868 - loss: 0.0411 - val_accuracy: 0.8653 - val_loss: 0.9308\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8629 - loss: 0.8626\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9952 - loss: 0.0129\n",
      "15.429506234327953\n",
      "1.7035014192263285\n",
      "0.04738357861836751\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4485 - loss: 1.6120 - val_accuracy: 0.5996 - val_loss: 1.2394\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6789 - loss: 0.9466 - val_accuracy: 0.6940 - val_loss: 0.9460\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7490 - loss: 0.7358 - val_accuracy: 0.7444 - val_loss: 0.8395\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8047 - loss: 0.5914 - val_accuracy: 0.7384 - val_loss: 0.8583\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8230 - loss: 0.5273 - val_accuracy: 0.7783 - val_loss: 0.7542\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8523 - loss: 0.4481 - val_accuracy: 0.7746 - val_loss: 0.8216\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8800 - loss: 0.3698 - val_accuracy: 0.7888 - val_loss: 0.8066\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8821 - loss: 0.3559 - val_accuracy: 0.7980 - val_loss: 0.8267\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8979 - loss: 0.3140 - val_accuracy: 0.8071 - val_loss: 0.7381\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9126 - loss: 0.2640 - val_accuracy: 0.8039 - val_loss: 0.7923\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9106 - loss: 0.2702 - val_accuracy: 0.8145 - val_loss: 0.7720\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9219 - loss: 0.2382 - val_accuracy: 0.8282 - val_loss: 0.7083\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9323 - loss: 0.2040 - val_accuracy: 0.8104 - val_loss: 0.7752\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9374 - loss: 0.1891 - val_accuracy: 0.8232 - val_loss: 0.7460\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9388 - loss: 0.1844 - val_accuracy: 0.8310 - val_loss: 0.7773\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9466 - loss: 0.1646 - val_accuracy: 0.8323 - val_loss: 0.7546\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9522 - loss: 0.1480 - val_accuracy: 0.8301 - val_loss: 0.7930\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9534 - loss: 0.1393 - val_accuracy: 0.8420 - val_loss: 0.7100\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9500 - loss: 0.1489 - val_accuracy: 0.8539 - val_loss: 0.7318\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9599 - loss: 0.1209 - val_accuracy: 0.8548 - val_loss: 0.6997\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9622 - loss: 0.1104 - val_accuracy: 0.8420 - val_loss: 0.7694\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9656 - loss: 0.1043 - val_accuracy: 0.8360 - val_loss: 0.8480\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9615 - loss: 0.1194 - val_accuracy: 0.8401 - val_loss: 0.8353\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9704 - loss: 0.0903 - val_accuracy: 0.8530 - val_loss: 0.7565\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9666 - loss: 0.0978 - val_accuracy: 0.8323 - val_loss: 0.9003\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9618 - loss: 0.1153 - val_accuracy: 0.8438 - val_loss: 0.8813\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9638 - loss: 0.1102 - val_accuracy: 0.8543 - val_loss: 0.8238\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9730 - loss: 0.0773 - val_accuracy: 0.8452 - val_loss: 0.8919\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9719 - loss: 0.0790 - val_accuracy: 0.8571 - val_loss: 0.8535\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9779 - loss: 0.0642 - val_accuracy: 0.8626 - val_loss: 0.7744\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9776 - loss: 0.0685 - val_accuracy: 0.8461 - val_loss: 0.8650\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9739 - loss: 0.0772 - val_accuracy: 0.8516 - val_loss: 0.8870\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9695 - loss: 0.0920 - val_accuracy: 0.8355 - val_loss: 0.9086\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9785 - loss: 0.0644 - val_accuracy: 0.8585 - val_loss: 0.8088\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9844 - loss: 0.0501 - val_accuracy: 0.8484 - val_loss: 0.8971\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9742 - loss: 0.0806 - val_accuracy: 0.8543 - val_loss: 0.8855\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9793 - loss: 0.0611 - val_accuracy: 0.8575 - val_loss: 0.9457\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9797 - loss: 0.0624 - val_accuracy: 0.8493 - val_loss: 0.9442\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9844 - loss: 0.0537 - val_accuracy: 0.8676 - val_loss: 0.8491\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9864 - loss: 0.0452 - val_accuracy: 0.8585 - val_loss: 0.9053\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9764 - loss: 0.0670 - val_accuracy: 0.8685 - val_loss: 0.9244\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9781 - loss: 0.0592 - val_accuracy: 0.8617 - val_loss: 0.9160\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9836 - loss: 0.0563 - val_accuracy: 0.8594 - val_loss: 0.8854\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9842 - loss: 0.0464 - val_accuracy: 0.8447 - val_loss: 1.0233\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9800 - loss: 0.0640 - val_accuracy: 0.8607 - val_loss: 0.8495\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9826 - loss: 0.0492 - val_accuracy: 0.8621 - val_loss: 0.9221\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9852 - loss: 0.0465 - val_accuracy: 0.8635 - val_loss: 0.8951\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9835 - loss: 0.0482 - val_accuracy: 0.8676 - val_loss: 0.9381\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9831 - loss: 0.0509 - val_accuracy: 0.8676 - val_loss: 0.9187\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9809 - loss: 0.0575 - val_accuracy: 0.8635 - val_loss: 0.9440\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9865 - loss: 0.0376 - val_accuracy: 0.8603 - val_loss: 0.8556\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9864 - loss: 0.0434 - val_accuracy: 0.8635 - val_loss: 0.9511\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9842 - loss: 0.0506 - val_accuracy: 0.8575 - val_loss: 0.9965\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9798 - loss: 0.0599 - val_accuracy: 0.8662 - val_loss: 0.9224\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0399 - val_accuracy: 0.8685 - val_loss: 0.9444\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9879 - loss: 0.0352 - val_accuracy: 0.8672 - val_loss: 0.9278\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9863 - loss: 0.0461 - val_accuracy: 0.8635 - val_loss: 0.9064\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0454 - val_accuracy: 0.8511 - val_loss: 0.9739\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9833 - loss: 0.0543 - val_accuracy: 0.8727 - val_loss: 0.9085\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0341 - val_accuracy: 0.8722 - val_loss: 0.9435\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0365 - val_accuracy: 0.8598 - val_loss: 1.0224\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9806 - loss: 0.0547 - val_accuracy: 0.8626 - val_loss: 0.9439\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9855 - loss: 0.0618 - val_accuracy: 0.8672 - val_loss: 0.9573\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9886 - loss: 0.0351 - val_accuracy: 0.8699 - val_loss: 1.0076\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0430 - val_accuracy: 0.8685 - val_loss: 0.9494\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9881 - loss: 0.0313 - val_accuracy: 0.8685 - val_loss: 0.9681\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0409 - val_accuracy: 0.8589 - val_loss: 1.0539\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9883 - loss: 0.0409 - val_accuracy: 0.8612 - val_loss: 0.9764\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0600 - val_accuracy: 0.8704 - val_loss: 0.9399\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9904 - loss: 0.0310 - val_accuracy: 0.8786 - val_loss: 0.9455\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9907 - loss: 0.0370 - val_accuracy: 0.8552 - val_loss: 1.0285\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0477 - val_accuracy: 0.8781 - val_loss: 0.8955\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9911 - loss: 0.0266 - val_accuracy: 0.8754 - val_loss: 0.9075\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9919 - loss: 0.0260 - val_accuracy: 0.8759 - val_loss: 0.9579\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9924 - loss: 0.0253 - val_accuracy: 0.8612 - val_loss: 0.9996\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9833 - loss: 0.0586 - val_accuracy: 0.8708 - val_loss: 0.9015\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9882 - loss: 0.0407 - val_accuracy: 0.8772 - val_loss: 0.8947\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9905 - loss: 0.0330 - val_accuracy: 0.8814 - val_loss: 0.8831\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9947 - loss: 0.0195 - val_accuracy: 0.8800 - val_loss: 0.8690\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9936 - loss: 0.0209 - val_accuracy: 0.8786 - val_loss: 0.8624\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9866 - loss: 0.0429 - val_accuracy: 0.8690 - val_loss: 0.9382\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0423 - val_accuracy: 0.8548 - val_loss: 1.0590\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0320 - val_accuracy: 0.8589 - val_loss: 1.0398\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9900 - loss: 0.0331 - val_accuracy: 0.8575 - val_loss: 1.0283\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9903 - loss: 0.0305 - val_accuracy: 0.8694 - val_loss: 1.0377\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9890 - loss: 0.0390 - val_accuracy: 0.8653 - val_loss: 1.0465\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9913 - loss: 0.0348 - val_accuracy: 0.8621 - val_loss: 1.0211\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9911 - loss: 0.0299 - val_accuracy: 0.8704 - val_loss: 1.0034\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9916 - loss: 0.0289 - val_accuracy: 0.8681 - val_loss: 0.9933\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9915 - loss: 0.0278 - val_accuracy: 0.8777 - val_loss: 0.9353\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8752 - loss: 0.8993\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9969 - loss: 0.0119\n",
      "15.525006198883057\n",
      "1.7090173403422038\n",
      "0.04833710193634033\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4815 - loss: 1.5409 - val_accuracy: 0.6386 - val_loss: 1.0686\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6857 - loss: 0.9507 - val_accuracy: 0.6981 - val_loss: 0.9264\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7503 - loss: 0.7444 - val_accuracy: 0.7595 - val_loss: 0.8649\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8089 - loss: 0.5841 - val_accuracy: 0.7517 - val_loss: 0.8300\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8225 - loss: 0.5475 - val_accuracy: 0.7590 - val_loss: 0.8575\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8529 - loss: 0.4435 - val_accuracy: 0.7751 - val_loss: 0.7709\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8645 - loss: 0.4041 - val_accuracy: 0.7833 - val_loss: 0.8794\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8786 - loss: 0.3610 - val_accuracy: 0.8094 - val_loss: 0.7066\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8960 - loss: 0.3085 - val_accuracy: 0.8209 - val_loss: 0.7015\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9078 - loss: 0.2899 - val_accuracy: 0.8305 - val_loss: 0.7222\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9184 - loss: 0.2467 - val_accuracy: 0.8246 - val_loss: 0.7272\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9151 - loss: 0.2597 - val_accuracy: 0.8108 - val_loss: 0.7959\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9277 - loss: 0.2222 - val_accuracy: 0.8337 - val_loss: 0.6764\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9391 - loss: 0.1930 - val_accuracy: 0.8410 - val_loss: 0.6902\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9391 - loss: 0.1842 - val_accuracy: 0.8479 - val_loss: 0.7030\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9459 - loss: 0.1613 - val_accuracy: 0.8433 - val_loss: 0.7323\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9475 - loss: 0.1607 - val_accuracy: 0.8525 - val_loss: 0.6895\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9570 - loss: 0.1289 - val_accuracy: 0.8497 - val_loss: 0.7552\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9526 - loss: 0.1410 - val_accuracy: 0.8488 - val_loss: 0.6861\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9526 - loss: 0.1439 - val_accuracy: 0.8497 - val_loss: 0.7283\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9563 - loss: 0.1265 - val_accuracy: 0.8603 - val_loss: 0.7016\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9614 - loss: 0.1103 - val_accuracy: 0.8612 - val_loss: 0.6659\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9660 - loss: 0.1048 - val_accuracy: 0.8607 - val_loss: 0.7089\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9657 - loss: 0.0975 - val_accuracy: 0.8415 - val_loss: 0.8099\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9706 - loss: 0.0933 - val_accuracy: 0.8566 - val_loss: 0.7660\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9640 - loss: 0.1094 - val_accuracy: 0.8580 - val_loss: 0.7307\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9745 - loss: 0.0742 - val_accuracy: 0.8575 - val_loss: 0.7835\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9710 - loss: 0.0860 - val_accuracy: 0.8681 - val_loss: 0.6769\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9709 - loss: 0.0850 - val_accuracy: 0.8589 - val_loss: 0.7662\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9748 - loss: 0.0741 - val_accuracy: 0.8694 - val_loss: 0.7050\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9791 - loss: 0.0610 - val_accuracy: 0.8681 - val_loss: 0.7115\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9804 - loss: 0.0597 - val_accuracy: 0.8516 - val_loss: 0.8722\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9787 - loss: 0.0638 - val_accuracy: 0.8658 - val_loss: 0.7560\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9741 - loss: 0.0816 - val_accuracy: 0.8557 - val_loss: 0.8525\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9804 - loss: 0.0655 - val_accuracy: 0.8653 - val_loss: 0.7574\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9790 - loss: 0.0618 - val_accuracy: 0.8644 - val_loss: 0.7821\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9790 - loss: 0.0621 - val_accuracy: 0.8539 - val_loss: 0.8089\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9830 - loss: 0.0523 - val_accuracy: 0.8635 - val_loss: 0.7937\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9836 - loss: 0.0510 - val_accuracy: 0.8598 - val_loss: 0.7846\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9787 - loss: 0.0686 - val_accuracy: 0.8708 - val_loss: 0.8045\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9835 - loss: 0.0489 - val_accuracy: 0.8662 - val_loss: 0.8614\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0606 - val_accuracy: 0.8607 - val_loss: 0.8222\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9761 - loss: 0.0736 - val_accuracy: 0.8649 - val_loss: 0.8140\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9834 - loss: 0.0508 - val_accuracy: 0.8644 - val_loss: 0.8761\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9850 - loss: 0.0467 - val_accuracy: 0.8644 - val_loss: 0.9374\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0508 - val_accuracy: 0.8727 - val_loss: 0.8153\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9824 - loss: 0.0541 - val_accuracy: 0.8690 - val_loss: 0.8722\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9859 - loss: 0.0433 - val_accuracy: 0.8754 - val_loss: 0.8102\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0403 - val_accuracy: 0.8818 - val_loss: 0.7891\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0471 - val_accuracy: 0.8580 - val_loss: 0.9297\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9767 - loss: 0.0695 - val_accuracy: 0.8672 - val_loss: 0.9146\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9849 - loss: 0.0494 - val_accuracy: 0.8713 - val_loss: 0.8407\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0373 - val_accuracy: 0.8740 - val_loss: 0.7818\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9879 - loss: 0.0352 - val_accuracy: 0.8745 - val_loss: 0.8083\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0405 - val_accuracy: 0.8607 - val_loss: 0.8957\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0454 - val_accuracy: 0.8736 - val_loss: 0.8671\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9856 - loss: 0.0452 - val_accuracy: 0.8717 - val_loss: 0.8223\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9843 - loss: 0.0461 - val_accuracy: 0.8649 - val_loss: 0.8305\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9860 - loss: 0.0406 - val_accuracy: 0.8717 - val_loss: 0.8693\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0415 - val_accuracy: 0.8795 - val_loss: 0.7911\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9894 - loss: 0.0391 - val_accuracy: 0.8800 - val_loss: 0.8163\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9863 - loss: 0.0446 - val_accuracy: 0.8772 - val_loss: 0.8266\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9919 - loss: 0.0294 - val_accuracy: 0.8759 - val_loss: 0.8485\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9818 - loss: 0.0598 - val_accuracy: 0.8607 - val_loss: 0.9938\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9828 - loss: 0.0507 - val_accuracy: 0.8754 - val_loss: 0.8214\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9926 - loss: 0.0268 - val_accuracy: 0.8708 - val_loss: 0.8961\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9902 - loss: 0.0306 - val_accuracy: 0.8479 - val_loss: 0.9902\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0469 - val_accuracy: 0.8708 - val_loss: 0.9135\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9896 - loss: 0.0343 - val_accuracy: 0.8745 - val_loss: 0.8997\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9890 - loss: 0.0370 - val_accuracy: 0.8708 - val_loss: 0.9006\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0310 - val_accuracy: 0.8685 - val_loss: 0.9770\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9869 - loss: 0.0413 - val_accuracy: 0.8736 - val_loss: 0.9319\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9909 - loss: 0.0286 - val_accuracy: 0.8717 - val_loss: 0.8583\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9851 - loss: 0.0450 - val_accuracy: 0.8736 - val_loss: 0.8832\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9918 - loss: 0.0255 - val_accuracy: 0.8768 - val_loss: 0.8582\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9907 - loss: 0.0299 - val_accuracy: 0.8740 - val_loss: 1.0298\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0576 - val_accuracy: 0.8736 - val_loss: 0.8959\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9879 - loss: 0.0386 - val_accuracy: 0.8672 - val_loss: 0.9246\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9895 - loss: 0.0316 - val_accuracy: 0.8786 - val_loss: 0.8911\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9920 - loss: 0.0255 - val_accuracy: 0.8727 - val_loss: 0.9166\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9902 - loss: 0.0292 - val_accuracy: 0.8781 - val_loss: 0.9384\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9900 - loss: 0.0345 - val_accuracy: 0.8653 - val_loss: 0.9042\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9893 - loss: 0.0336 - val_accuracy: 0.8818 - val_loss: 0.8855\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9923 - loss: 0.0303 - val_accuracy: 0.8658 - val_loss: 1.0208\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9905 - loss: 0.0358 - val_accuracy: 0.8818 - val_loss: 0.9332\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9874 - loss: 0.0416 - val_accuracy: 0.8717 - val_loss: 0.9353\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9907 - loss: 0.0284 - val_accuracy: 0.8772 - val_loss: 0.9295\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9900 - loss: 0.0319 - val_accuracy: 0.8749 - val_loss: 0.8412\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9907 - loss: 0.0332 - val_accuracy: 0.8777 - val_loss: 0.9007\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9884 - loss: 0.0330 - val_accuracy: 0.8836 - val_loss: 0.8901\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8865 - loss: 0.8317\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9962 - loss: 0.0120\n",
      "15.470872120062511\n",
      "1.7122194131215414\n",
      "0.05185682376225789\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4592 - loss: 1.5971 - val_accuracy: 0.6056 - val_loss: 1.2048\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6698 - loss: 0.9907 - val_accuracy: 0.7036 - val_loss: 0.9316\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7389 - loss: 0.7875 - val_accuracy: 0.7352 - val_loss: 0.8838\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7837 - loss: 0.6487 - val_accuracy: 0.7366 - val_loss: 0.8732\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8216 - loss: 0.5476 - val_accuracy: 0.7563 - val_loss: 0.7930\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8485 - loss: 0.4609 - val_accuracy: 0.7696 - val_loss: 0.7728\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8646 - loss: 0.4108 - val_accuracy: 0.7952 - val_loss: 0.7107\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8766 - loss: 0.3691 - val_accuracy: 0.8012 - val_loss: 0.6688\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8941 - loss: 0.3244 - val_accuracy: 0.7865 - val_loss: 0.7218\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8985 - loss: 0.2950 - val_accuracy: 0.8030 - val_loss: 0.7057\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9126 - loss: 0.2662 - val_accuracy: 0.8058 - val_loss: 0.6905\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9191 - loss: 0.2482 - val_accuracy: 0.8213 - val_loss: 0.6474\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9216 - loss: 0.2334 - val_accuracy: 0.8360 - val_loss: 0.6703\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9316 - loss: 0.1982 - val_accuracy: 0.8355 - val_loss: 0.6153\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9355 - loss: 0.1918 - val_accuracy: 0.8273 - val_loss: 0.6795\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9403 - loss: 0.1742 - val_accuracy: 0.8296 - val_loss: 0.6718\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9512 - loss: 0.1530 - val_accuracy: 0.8415 - val_loss: 0.6497\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9460 - loss: 0.1532 - val_accuracy: 0.8497 - val_loss: 0.6481\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9555 - loss: 0.1360 - val_accuracy: 0.8401 - val_loss: 0.6300\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9597 - loss: 0.1200 - val_accuracy: 0.8429 - val_loss: 0.6498\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9638 - loss: 0.1085 - val_accuracy: 0.8337 - val_loss: 0.7020\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9526 - loss: 0.1409 - val_accuracy: 0.8548 - val_loss: 0.6241\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9671 - loss: 0.0972 - val_accuracy: 0.8612 - val_loss: 0.5838\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9682 - loss: 0.0931 - val_accuracy: 0.8603 - val_loss: 0.6714\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9648 - loss: 0.1053 - val_accuracy: 0.8589 - val_loss: 0.6147\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9721 - loss: 0.0851 - val_accuracy: 0.8383 - val_loss: 0.7864\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9654 - loss: 0.1006 - val_accuracy: 0.8493 - val_loss: 0.6711\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9777 - loss: 0.0719 - val_accuracy: 0.8740 - val_loss: 0.6630\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9751 - loss: 0.0756 - val_accuracy: 0.8690 - val_loss: 0.6948\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9716 - loss: 0.0881 - val_accuracy: 0.8676 - val_loss: 0.6837\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9734 - loss: 0.0786 - val_accuracy: 0.8557 - val_loss: 0.7062\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9766 - loss: 0.0673 - val_accuracy: 0.8639 - val_loss: 0.6742\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9783 - loss: 0.0635 - val_accuracy: 0.8649 - val_loss: 0.6972\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9737 - loss: 0.0748 - val_accuracy: 0.8589 - val_loss: 0.7785\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9734 - loss: 0.0753 - val_accuracy: 0.8690 - val_loss: 0.6541\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0530 - val_accuracy: 0.8722 - val_loss: 0.7043\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9804 - loss: 0.0593 - val_accuracy: 0.8644 - val_loss: 0.7302\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9735 - loss: 0.0763 - val_accuracy: 0.8603 - val_loss: 0.7340\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9804 - loss: 0.0526 - val_accuracy: 0.8676 - val_loss: 0.7127\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9808 - loss: 0.0519 - val_accuracy: 0.8717 - val_loss: 0.7103\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9794 - loss: 0.0563 - val_accuracy: 0.8630 - val_loss: 0.7484\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9784 - loss: 0.0645 - val_accuracy: 0.8736 - val_loss: 0.7541\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9839 - loss: 0.0500 - val_accuracy: 0.8566 - val_loss: 0.8034\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9795 - loss: 0.0574 - val_accuracy: 0.8672 - val_loss: 0.7606\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0566 - val_accuracy: 0.8639 - val_loss: 0.7675\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9818 - loss: 0.0530 - val_accuracy: 0.8662 - val_loss: 0.7967\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9866 - loss: 0.0385 - val_accuracy: 0.8749 - val_loss: 0.7457\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9819 - loss: 0.0541 - val_accuracy: 0.8580 - val_loss: 0.8207\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9811 - loss: 0.0558 - val_accuracy: 0.8727 - val_loss: 0.7655\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0426 - val_accuracy: 0.8722 - val_loss: 0.7752\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9831 - loss: 0.0510 - val_accuracy: 0.8708 - val_loss: 0.8111\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9832 - loss: 0.0551 - val_accuracy: 0.8722 - val_loss: 0.7648\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9834 - loss: 0.0535 - val_accuracy: 0.8635 - val_loss: 0.7892\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9852 - loss: 0.0423 - val_accuracy: 0.8557 - val_loss: 0.8686\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0477 - val_accuracy: 0.8685 - val_loss: 0.8243\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9826 - loss: 0.0515 - val_accuracy: 0.8763 - val_loss: 0.7527\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9891 - loss: 0.0301 - val_accuracy: 0.8713 - val_loss: 0.8017\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9876 - loss: 0.0353 - val_accuracy: 0.8649 - val_loss: 0.7955\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9843 - loss: 0.0470 - val_accuracy: 0.8612 - val_loss: 0.8392\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9856 - loss: 0.0395 - val_accuracy: 0.8639 - val_loss: 0.8283\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9830 - loss: 0.0562 - val_accuracy: 0.8662 - val_loss: 0.8657\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0381 - val_accuracy: 0.8639 - val_loss: 0.8421\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9868 - loss: 0.0401 - val_accuracy: 0.8740 - val_loss: 0.8124\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9898 - loss: 0.0298 - val_accuracy: 0.8804 - val_loss: 0.7538\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0365 - val_accuracy: 0.8621 - val_loss: 0.9227\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0488 - val_accuracy: 0.8745 - val_loss: 0.7879\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0399 - val_accuracy: 0.8749 - val_loss: 0.8247\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0381 - val_accuracy: 0.8658 - val_loss: 0.9035\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0395 - val_accuracy: 0.8621 - val_loss: 0.8770\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9858 - loss: 0.0420 - val_accuracy: 0.8772 - val_loss: 0.8657\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9888 - loss: 0.0307 - val_accuracy: 0.8630 - val_loss: 0.8869\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9846 - loss: 0.0448 - val_accuracy: 0.8763 - val_loss: 0.8319\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9826 - loss: 0.0511 - val_accuracy: 0.8745 - val_loss: 0.8090\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9891 - loss: 0.0353 - val_accuracy: 0.8818 - val_loss: 0.7426\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9902 - loss: 0.0282 - val_accuracy: 0.8745 - val_loss: 0.8054\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0411 - val_accuracy: 0.8809 - val_loss: 0.7963\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9906 - loss: 0.0283 - val_accuracy: 0.8754 - val_loss: 0.8426\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9853 - loss: 0.0449 - val_accuracy: 0.8781 - val_loss: 0.8036\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0317 - val_accuracy: 0.8621 - val_loss: 0.8620\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9851 - loss: 0.0501 - val_accuracy: 0.8626 - val_loss: 0.8790\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9906 - loss: 0.0286 - val_accuracy: 0.8662 - val_loss: 0.8649\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9909 - loss: 0.0286 - val_accuracy: 0.8795 - val_loss: 0.7946\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9896 - loss: 0.0357 - val_accuracy: 0.8639 - val_loss: 0.8953\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9850 - loss: 0.0478 - val_accuracy: 0.8662 - val_loss: 0.8870\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9909 - loss: 0.0301 - val_accuracy: 0.8672 - val_loss: 0.8184\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9886 - loss: 0.0339 - val_accuracy: 0.8781 - val_loss: 0.8415\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9932 - loss: 0.0232 - val_accuracy: 0.8754 - val_loss: 0.8372\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9903 - loss: 0.0313 - val_accuracy: 0.8736 - val_loss: 0.8491\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9907 - loss: 0.0287 - val_accuracy: 0.8630 - val_loss: 0.9042\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9868 - loss: 0.0420 - val_accuracy: 0.8704 - val_loss: 0.8587\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8744 - loss: 0.7757\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9928 - loss: 0.0217\n",
      "15.64702537059784\n",
      "1.710021682580312\n",
      "0.04929679234822591\n",
      "90\n",
      "Epoch 1/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 11ms/step - accuracy: 0.4515 - loss: 1.6437 - val_accuracy: 0.6143 - val_loss: 1.1936\n",
      "Epoch 2/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.6748 - loss: 0.9709 - val_accuracy: 0.6903 - val_loss: 0.9817\n",
      "Epoch 3/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7436 - loss: 0.7835 - val_accuracy: 0.7068 - val_loss: 0.8987\n",
      "Epoch 4/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7901 - loss: 0.6333 - val_accuracy: 0.7274 - val_loss: 0.8443\n",
      "Epoch 5/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8139 - loss: 0.5544 - val_accuracy: 0.7710 - val_loss: 0.7524\n",
      "Epoch 6/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8379 - loss: 0.4772 - val_accuracy: 0.7751 - val_loss: 0.7291\n",
      "Epoch 7/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8702 - loss: 0.4017 - val_accuracy: 0.8016 - val_loss: 0.6873\n",
      "Epoch 8/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8798 - loss: 0.3557 - val_accuracy: 0.7797 - val_loss: 0.7830\n",
      "Epoch 9/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8931 - loss: 0.3186 - val_accuracy: 0.7925 - val_loss: 0.7402\n",
      "Epoch 10/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9087 - loss: 0.2783 - val_accuracy: 0.8168 - val_loss: 0.6602\n",
      "Epoch 11/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9156 - loss: 0.2588 - val_accuracy: 0.8026 - val_loss: 0.7454\n",
      "Epoch 12/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9215 - loss: 0.2377 - val_accuracy: 0.8250 - val_loss: 0.6840\n",
      "Epoch 13/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9290 - loss: 0.2123 - val_accuracy: 0.8186 - val_loss: 0.6974\n",
      "Epoch 14/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9257 - loss: 0.2207 - val_accuracy: 0.8227 - val_loss: 0.6505\n",
      "Epoch 15/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9400 - loss: 0.1771 - val_accuracy: 0.8365 - val_loss: 0.6405\n",
      "Epoch 16/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9427 - loss: 0.1718 - val_accuracy: 0.8374 - val_loss: 0.6333\n",
      "Epoch 17/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9430 - loss: 0.1685 - val_accuracy: 0.8415 - val_loss: 0.6777\n",
      "Epoch 18/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9529 - loss: 0.1400 - val_accuracy: 0.8516 - val_loss: 0.6138\n",
      "Epoch 19/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9507 - loss: 0.1447 - val_accuracy: 0.8484 - val_loss: 0.6540\n",
      "Epoch 20/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9585 - loss: 0.1250 - val_accuracy: 0.8530 - val_loss: 0.6072\n",
      "Epoch 21/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9595 - loss: 0.1157 - val_accuracy: 0.8438 - val_loss: 0.6481\n",
      "Epoch 22/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9682 - loss: 0.1036 - val_accuracy: 0.8530 - val_loss: 0.6144\n",
      "Epoch 23/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9645 - loss: 0.0987 - val_accuracy: 0.8282 - val_loss: 0.8233\n",
      "Epoch 24/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9673 - loss: 0.1022 - val_accuracy: 0.8479 - val_loss: 0.6456\n",
      "Epoch 25/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9630 - loss: 0.1141 - val_accuracy: 0.8502 - val_loss: 0.7043\n",
      "Epoch 26/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9678 - loss: 0.0947 - val_accuracy: 0.8530 - val_loss: 0.7065\n",
      "Epoch 27/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9641 - loss: 0.1018 - val_accuracy: 0.8562 - val_loss: 0.6837\n",
      "Epoch 28/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9681 - loss: 0.0912 - val_accuracy: 0.8507 - val_loss: 0.7040\n",
      "Epoch 29/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9688 - loss: 0.0950 - val_accuracy: 0.8456 - val_loss: 0.7432\n",
      "Epoch 30/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9746 - loss: 0.0744 - val_accuracy: 0.8534 - val_loss: 0.7907\n",
      "Epoch 31/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9752 - loss: 0.0702 - val_accuracy: 0.8406 - val_loss: 0.7393\n",
      "Epoch 32/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9731 - loss: 0.0764 - val_accuracy: 0.8612 - val_loss: 0.6851\n",
      "Epoch 33/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9777 - loss: 0.0631 - val_accuracy: 0.8617 - val_loss: 0.7286\n",
      "Epoch 34/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9766 - loss: 0.0662 - val_accuracy: 0.8635 - val_loss: 0.7331\n",
      "Epoch 35/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9772 - loss: 0.0670 - val_accuracy: 0.8635 - val_loss: 0.7691\n",
      "Epoch 36/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9718 - loss: 0.0809 - val_accuracy: 0.8562 - val_loss: 0.7296\n",
      "Epoch 37/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9800 - loss: 0.0616 - val_accuracy: 0.8690 - val_loss: 0.6914\n",
      "Epoch 38/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9814 - loss: 0.0550 - val_accuracy: 0.8639 - val_loss: 0.7205\n",
      "Epoch 39/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9795 - loss: 0.0668 - val_accuracy: 0.8681 - val_loss: 0.7368\n",
      "Epoch 40/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9804 - loss: 0.0588 - val_accuracy: 0.8539 - val_loss: 0.8161\n",
      "Epoch 41/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9775 - loss: 0.0673 - val_accuracy: 0.8626 - val_loss: 0.7591\n",
      "Epoch 42/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9857 - loss: 0.0397 - val_accuracy: 0.8672 - val_loss: 0.7483\n",
      "Epoch 43/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9792 - loss: 0.0637 - val_accuracy: 0.8621 - val_loss: 0.8219\n",
      "Epoch 44/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9832 - loss: 0.0553 - val_accuracy: 0.8443 - val_loss: 0.8453\n",
      "Epoch 45/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9797 - loss: 0.0595 - val_accuracy: 0.8534 - val_loss: 0.9204\n",
      "Epoch 46/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9817 - loss: 0.0497 - val_accuracy: 0.8644 - val_loss: 0.7975\n",
      "Epoch 47/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9852 - loss: 0.0465 - val_accuracy: 0.8575 - val_loss: 0.8478\n",
      "Epoch 48/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9844 - loss: 0.0483 - val_accuracy: 0.8649 - val_loss: 0.8210\n",
      "Epoch 49/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9796 - loss: 0.0621 - val_accuracy: 0.8653 - val_loss: 0.8099\n",
      "Epoch 50/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9825 - loss: 0.0480 - val_accuracy: 0.8672 - val_loss: 0.7272\n",
      "Epoch 51/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9840 - loss: 0.0510 - val_accuracy: 0.8681 - val_loss: 0.7808\n",
      "Epoch 52/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9841 - loss: 0.0444 - val_accuracy: 0.8694 - val_loss: 0.8400\n",
      "Epoch 53/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9817 - loss: 0.0526 - val_accuracy: 0.8694 - val_loss: 0.7768\n",
      "Epoch 54/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9827 - loss: 0.0513 - val_accuracy: 0.8749 - val_loss: 0.7917\n",
      "Epoch 55/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9855 - loss: 0.0419 - val_accuracy: 0.8685 - val_loss: 0.8030\n",
      "Epoch 56/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9833 - loss: 0.0517 - val_accuracy: 0.8727 - val_loss: 0.8272\n",
      "Epoch 57/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9866 - loss: 0.0444 - val_accuracy: 0.8649 - val_loss: 0.8600\n",
      "Epoch 58/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0393 - val_accuracy: 0.8681 - val_loss: 0.8009\n",
      "Epoch 59/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9885 - loss: 0.0347 - val_accuracy: 0.8740 - val_loss: 0.8036\n",
      "Epoch 60/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0361 - val_accuracy: 0.8713 - val_loss: 0.8383\n",
      "Epoch 61/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9872 - loss: 0.0387 - val_accuracy: 0.8575 - val_loss: 0.8909\n",
      "Epoch 62/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9816 - loss: 0.0575 - val_accuracy: 0.8603 - val_loss: 0.8951\n",
      "Epoch 63/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9880 - loss: 0.0392 - val_accuracy: 0.8630 - val_loss: 0.8412\n",
      "Epoch 64/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0387 - val_accuracy: 0.8617 - val_loss: 0.8979\n",
      "Epoch 65/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0341 - val_accuracy: 0.8754 - val_loss: 0.7495\n",
      "Epoch 66/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0423 - val_accuracy: 0.8736 - val_loss: 0.7923\n",
      "Epoch 67/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9861 - loss: 0.0442 - val_accuracy: 0.8781 - val_loss: 0.8079\n",
      "Epoch 68/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9887 - loss: 0.0334 - val_accuracy: 0.8759 - val_loss: 0.7637\n",
      "Epoch 69/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9877 - loss: 0.0346 - val_accuracy: 0.8727 - val_loss: 0.8587\n",
      "Epoch 70/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9897 - loss: 0.0338 - val_accuracy: 0.8740 - val_loss: 0.8870\n",
      "Epoch 71/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9856 - loss: 0.0457 - val_accuracy: 0.8694 - val_loss: 0.8579\n",
      "Epoch 72/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9853 - loss: 0.0449 - val_accuracy: 0.8717 - val_loss: 0.8300\n",
      "Epoch 73/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9878 - loss: 0.0433 - val_accuracy: 0.8727 - val_loss: 0.8881\n",
      "Epoch 74/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0409 - val_accuracy: 0.8754 - val_loss: 0.8373\n",
      "Epoch 75/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9898 - loss: 0.0318 - val_accuracy: 0.8722 - val_loss: 0.9217\n",
      "Epoch 76/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9848 - loss: 0.0531 - val_accuracy: 0.8681 - val_loss: 0.9196\n",
      "Epoch 77/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9889 - loss: 0.0345 - val_accuracy: 0.8708 - val_loss: 0.9203\n",
      "Epoch 78/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9885 - loss: 0.0338 - val_accuracy: 0.8717 - val_loss: 0.8910\n",
      "Epoch 79/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9895 - loss: 0.0323 - val_accuracy: 0.8704 - val_loss: 0.8691\n",
      "Epoch 80/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9862 - loss: 0.0373 - val_accuracy: 0.8621 - val_loss: 0.9178\n",
      "Epoch 81/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9902 - loss: 0.0307 - val_accuracy: 0.8786 - val_loss: 0.7868\n",
      "Epoch 82/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9885 - loss: 0.0316 - val_accuracy: 0.8658 - val_loss: 0.8495\n",
      "Epoch 83/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9883 - loss: 0.0338 - val_accuracy: 0.8763 - val_loss: 0.8282\n",
      "Epoch 84/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9898 - loss: 0.0331 - val_accuracy: 0.8717 - val_loss: 0.8865\n",
      "Epoch 85/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9878 - loss: 0.0398 - val_accuracy: 0.8667 - val_loss: 0.8756\n",
      "Epoch 86/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0358 - val_accuracy: 0.8713 - val_loss: 0.9769\n",
      "Epoch 87/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9885 - loss: 0.0403 - val_accuracy: 0.8607 - val_loss: 1.0132\n",
      "Epoch 88/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9870 - loss: 0.0423 - val_accuracy: 0.8594 - val_loss: 0.9610\n",
      "Epoch 89/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9896 - loss: 0.0336 - val_accuracy: 0.8740 - val_loss: 0.8955\n",
      "Epoch 90/90\n",
      "\u001b[1m437/437\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9919 - loss: 0.0251 - val_accuracy: 0.8722 - val_loss: 0.8862\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n",
      "\u001b[1m69/69\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8719 - loss: 0.8395\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "\u001b[1m410/410\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9957 - loss: 0.0171\n",
      "15.624130733807881\n",
      "1.7192434867223103\n",
      "0.04798645973205566\n"
     ]
    }
   ],
   "source": [
    "# test for model training module\n",
    "# augmentation_list_format = [noise_flag, crop_freq_time_flag, noise_factor, shift_factor, pitch_factor, speed_rate, time_or_freq_crop_factor, reflection_factor]\n",
    "augment_train_dict = {}\n",
    "augment_train_dict['Noised_12dBs'] = [1,1,12,0,0,1,0,0]\n",
    "augment_train_dict['Noised_20dBs'] = [1,1,20,0,0,1,0,0]\n",
    "augment_train_dict['Pitched_0.1'] = [0,1,0,0,0.1,1,0,0]\n",
    "augment_train_dict['Pitched_0.25'] = [0,1,0,0,0.25,1,0,0]\n",
    "augment_train_dict['Pitched_0.5'] = [1,1,0,0,0.5,1,0,0]\n",
    "augment_train_dict['Sped_1.1'] = [0,1,0,0,0,1.1,0,0]\n",
    "augment_train_dict['FreqCropped_0.05'] = [0,1,0,0,0,1,0.05,0] # freq_domain data crop\n",
    "augment_train_dict['FreqCropped_0.1'] = [0,1,0,0,0,1,0.1,0]\n",
    "augment_train_dict['TimeCropped_0.05'] = [0,0,0,0,0,1,0.05,0]\n",
    "augment_train_dict['TimeCropped_0.1'] = [0,0,0,0,0,1,0.1,0]\n",
    "augment_train_dict['Reflected_0.05'] = [0,1,0,0,0,1,0,0.05]\n",
    "augment_train_dict['Reflected_0.1'] = [0,1,0,0,0,1,0,0.05]\n",
    "\n",
    "aug_models_list, aug_models_validation_acc_list, aug_models_train_acc_list = [],[],[]\n",
    "aug_models_dataprep_time_list, aug_models_train_time_list,  aug_models_eval_time_list = [],[],[]\n",
    "aug_model_samples_list = []\n",
    "\n",
    "\n",
    "# model_trainer returns [model_aug, test_result_aug, train_result_aug, dataprep_aug, train_time_aug, eval_time_aug]\n",
    "for aug_method in augment_train_dict.keys():\n",
    "    [model, test_acc, train_acc, prep_time, train_time, eval_time] = model_trainer(data=df, model_name=aug_method, aug_set=augment_train_dict[aug_method],\n",
    "                                                           X_train_no_aug=X_train, Y_train_no_aug=Y_train)\n",
    "    aug_models_list.append(model)\n",
    "    aug_models_validation_acc_list.append(test_acc)\n",
    "    aug_models_train_acc_list.append(train_acc)\n",
    "    aug_models_dataprep_time_list.append(prep_time)\n",
    "    aug_models_train_time_list.append(train_time)\n",
    "    aug_models_eval_time_list.append(eval_time)\n",
    "    aug_model_samples_list.append(aug_method)\n",
    "                                      "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7917bf8c",
   "metadata": {
    "papermill": {
     "duration": 1.956225,
     "end_time": "2024-09-07T23:20:18.763106",
     "exception": false,
     "start_time": "2024-09-07T23:20:16.806881",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "af09d9b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:22.632296Z",
     "iopub.status.busy": "2024-09-07T23:20:22.631917Z",
     "iopub.status.idle": "2024-09-07T23:20:22.637661Z",
     "shell.execute_reply": "2024-09-07T23:20:22.636666Z"
    },
    "papermill": {
     "duration": 1.997899,
     "end_time": "2024-09-07T23:20:22.639670",
     "exception": false,
     "start_time": "2024-09-07T23:20:20.641771",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# data_crop_control_list = [[0,1,0.05,0,0,0,1], [0,1,0.1,0,0,0,1], [0,1,0.2,0,0,0,1], [0,1,0.5,0,0,0,1]]\n",
    "# reflect_control_list = [[0,1,0,0.05,0,0,1], [0,1,0,0.1,0,0,1], [0,1,0,0.2,0,0,1]]\n",
    "\n",
    "# sample_list = [data_crop_control_list, reflect_control_list]\n",
    "# alt_train_acc, alt_valid_acc, alt_dataprep_time_listed, alt_eval_time_listed = [],[],[],[]\n",
    "\n",
    "# for control in sample_list:\n",
    "#     for sample in control:\n",
    "\n",
    "#         # separating the data into features and labels for further operation\n",
    "#         feature, label, start, end = parser(df, noise_factor=sample[0], snr_dbs=sample[1], crop_factor=sample[2], added_shift_factor=sample[3], shift_factor=sample[4], pitch_factor=sample[5], speed_rate=sample[6], decimal = True, aug = True)\n",
    "\n",
    "#         # preparation of the train and test data\n",
    "#         X_train, X_test, Y_train, Y_test = prepare_data(feature, label)\n",
    "\n",
    "#         # calling the existing model trained without any augmentation method utilized\n",
    "#         model = train_model(train = False, model_name = \"Original_Model.keras\")\n",
    "\n",
    "#         # accuracy attainment\n",
    "#         train_result, test_result, eval_time = train_test_accuracy(model, X_train, X_test, Y_train, Y_test)\n",
    "\n",
    "#         time_elapsed = (end-start)/60\n",
    "        \n",
    "#         print(time_elapsed)\n",
    "#         print(eval_time)\n",
    "\n",
    "#         alt_train_acc.append(train_result)\n",
    "#         alt_valid_acc.append(test_result)\n",
    "#         alt_dataprep_time_listed.append(time_elapsed)\n",
    "#         alt_eval_time_listed.append(eval_time)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a76204d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:26.612431Z",
     "iopub.status.busy": "2024-09-07T23:20:26.612072Z",
     "iopub.status.idle": "2024-09-07T23:20:26.616767Z",
     "shell.execute_reply": "2024-09-07T23:20:26.615839Z"
    },
    "papermill": {
     "duration": 2.083769,
     "end_time": "2024-09-07T23:20:26.618749",
     "exception": false,
     "start_time": "2024-09-07T23:20:24.534980",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # noise augmentation through the extended dataset, SNR=20dB\n",
    "# feature, label, start, end = parser(df, noise_factor=1, snr_dbs=12, shift_factor=0, pitch_factor=0, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_noised, X_test_noised, Y_train_noised, Y_test_noised = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train1 = np.concatenate((X_train, X_train_noised), axis=0)\n",
    "# Y_train1 = np.concatenate((Y_train, Y_train_noised), axis=0)\n",
    "\n",
    "# model_noise, train_time_noise = train_model(train = True, model_name = \"Model_Noise\", X_test = X_test, X_train = X_train1, Y_test = Y_test, Y_train = Y_train1, epochs = 90)\n",
    "# train_result_noiseaug, test_result_noiseaug, eval_time_noiseaug = train_test_accuracy(model_noise, X_train1, X_test, Y_train1, Y_test)\n",
    "# time_elapsed_noise_aug = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_noise_aug)\n",
    "# print(train_time_noise)\n",
    "# print(eval_time_noiseaug)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "35cb60d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:30.435753Z",
     "iopub.status.busy": "2024-09-07T23:20:30.435349Z",
     "iopub.status.idle": "2024-09-07T23:20:30.440031Z",
     "shell.execute_reply": "2024-09-07T23:20:30.439140Z"
    },
    "papermill": {
     "duration": 1.94047,
     "end_time": "2024-09-07T23:20:30.442022",
     "exception": false,
     "start_time": "2024-09-07T23:20:28.501552",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # noise augmentation through the extended dataset, SNR=20dB\n",
    "# feature, label, start, end = parser(df, noise_factor=1, snr_dbs=20, shift_factor=0, pitch_factor=0, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_noised2, X_test_noised2, Y_train_noised2, Y_test_noised2 = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train11 = np.concatenate((X_train, X_train_noised2), axis=0)\n",
    "# Y_train11 = np.concatenate((Y_train, Y_train_noised2), axis=0)\n",
    "\n",
    "# model_noise2, train_time_noise2 = train_model(train = True, model_name = \"Model_Noise2\", X_test = X_test, X_train = X_train11, Y_test = Y_test, Y_train = Y_train11, epochs = 90)\n",
    "# train_result_noiseaug2, test_result_noiseaug2, eval_time_noiseaug2 = train_test_accuracy(model_noise2, X_train11, X_test, Y_train11, Y_test)\n",
    "# time_elapsed_noise_aug2 = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_noise_aug2)\n",
    "# print(train_time_noise2)\n",
    "# print(eval_time_noiseaug2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "26414bba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:34.310333Z",
     "iopub.status.busy": "2024-09-07T23:20:34.309193Z",
     "iopub.status.idle": "2024-09-07T23:20:34.314799Z",
     "shell.execute_reply": "2024-09-07T23:20:34.313847Z"
    },
    "papermill": {
     "duration": 1.913901,
     "end_time": "2024-09-07T23:20:34.316756",
     "exception": false,
     "start_time": "2024-09-07T23:20:32.402855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # speed augmentation through the extended dataset, speed_rate=1.1\n",
    "# feature, label, start, end = parser(df, noise_factor=0, snr_dbs=1, shift_factor=0, pitch_factor=0, speed_rate=1.1, decimal = True, aug = True)\n",
    "# X_train_sped, X_test_sped, Y_train_sped, Y_test_sped = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train2 = np.concatenate((X_train, X_train_sped), axis=0)\n",
    "# Y_train2 = np.concatenate((Y_train, Y_train_sped), axis=0)\n",
    "\n",
    "# model_speed, train_time_sped = train_model(train = True, model_name = \"Model_Speed\", X_test = X_test, X_train = X_train2, Y_test = Y_test, Y_train = Y_train2, epochs = 90)\n",
    "# train_result_speed, test_result_speed, eval_time_sped = train_test_accuracy(model_speed, X_train2, X_test, Y_train2, Y_test)\n",
    "# time_elapsed_speed_aug = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_speed_aug)\n",
    "# print(train_time_sped)\n",
    "# print(eval_time_sped)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ad06a329",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:38.223546Z",
     "iopub.status.busy": "2024-09-07T23:20:38.223190Z",
     "iopub.status.idle": "2024-09-07T23:20:38.227979Z",
     "shell.execute_reply": "2024-09-07T23:20:38.227118Z"
    },
    "papermill": {
     "duration": 1.907673,
     "end_time": "2024-09-07T23:20:38.229918",
     "exception": false,
     "start_time": "2024-09-07T23:20:36.322245",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # pitch augmentation through the extended dataset, p_fact=0.1ss\n",
    "# feature, label, start, end = parser(df, noise_factor=0, snr_dbs=1, shift_factor=0, pitch_factor=0.1, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_pitched1, X_test_pitched1, Y_train_pitched1, Y_test_pitched1 = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train3 = np.concatenate((X_train, X_train_pitched1), axis=0)\n",
    "# Y_train3 = np.concatenate((Y_train, Y_train_pitched1), axis=0)\n",
    "\n",
    "# model_pitch, train_time_pitch = train_model(train = True, model_name = \"Model_Pitch1\", X_test = X_test, X_train = X_train3, Y_test = Y_test, Y_train = Y_train3, epochs = 90)\n",
    "# train_result_pitch, test_result_pitch, eval_time_pitch = train_test_accuracy(model_pitch, X_train3, X_test, Y_train3, Y_test)\n",
    "# time_elapsed_pitch_aug = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_pitch_aug)\n",
    "# print(train_time_pitch)\n",
    "# print(eval_time_pitch)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8f0eeb97",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:42.139778Z",
     "iopub.status.busy": "2024-09-07T23:20:42.139402Z",
     "iopub.status.idle": "2024-09-07T23:20:42.144142Z",
     "shell.execute_reply": "2024-09-07T23:20:42.143260Z"
    },
    "papermill": {
     "duration": 1.978785,
     "end_time": "2024-09-07T23:20:42.146049",
     "exception": false,
     "start_time": "2024-09-07T23:20:40.167264",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # pitch augmentation through the extended dataset, p_fact=0.25\n",
    "# feature, label, start, end = parser(df, noise_factor=0, snr_dbs=1, shift_factor=0, pitch_factor=0.25, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_pitched2, X_test_pitched2, Y_train_pitched2, Y_test_pitched2 = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train4 = np.concatenate((X_train, X_train_pitched2), axis=0)\n",
    "# Y_train4 = np.concatenate((Y_train, Y_train_pitched2), axis=0)\n",
    "\n",
    "# model_pitch2, train_time_pitch2 = train_model(train = True, model_name = \"Model_Pitch2\", X_test = X_test, X_train = X_train4, Y_test = Y_test, Y_train = Y_train4, epochs = 90)\n",
    "# train_result_pitch2, test_result_pitch2, eval_time_pitch2 = train_test_accuracy(model_pitch2, X_train4, X_test, Y_train4, Y_test)\n",
    "# time_elapsed_pitch_aug2 = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_pitch_aug2)\n",
    "# print(train_time_pitch2)\n",
    "# print(eval_time_pitch2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e92d67c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:45.964216Z",
     "iopub.status.busy": "2024-09-07T23:20:45.963850Z",
     "iopub.status.idle": "2024-09-07T23:20:45.968910Z",
     "shell.execute_reply": "2024-09-07T23:20:45.967945Z"
    },
    "papermill": {
     "duration": 1.953977,
     "end_time": "2024-09-07T23:20:45.971042",
     "exception": false,
     "start_time": "2024-09-07T23:20:44.017065",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # pitch augmentation through the extended dataset, p_fact=0.5\n",
    "# feature, label, start, end = parser(df, noise_factor=0, snr_dbs=1, shift_factor=0, pitch_factor=0.5, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_pitched3, X_test_pitched3, Y_train_pitched3, Y_test_pitched3 = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train5 = np.concatenate((X_train, X_train_pitched3), axis=0)\n",
    "# Y_train5 = np.concatenate((Y_train, Y_train_pitched3), axis=0)\n",
    "\n",
    "# model_pitch3, train_time_pitch3 = train_model(train = True, model_name = \"Model_Pitch3\", X_test = X_test, X_train = X_train5, Y_test = Y_test, Y_train = Y_train5, epochs = 90)\n",
    "# train_result_pitch3, test_result_pitch3, eval_time_pitch3 = train_test_accuracy(model_pitch3, X_train5, X_test, Y_train5, Y_test)\n",
    "# time_elapsed_pitch_aug3 = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_pitch_aug3)\n",
    "# print(train_time_pitch3)\n",
    "# print(eval_time_pitch3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b727d947",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:49.816210Z",
     "iopub.status.busy": "2024-09-07T23:20:49.815876Z",
     "iopub.status.idle": "2024-09-07T23:20:49.820586Z",
     "shell.execute_reply": "2024-09-07T23:20:49.819752Z"
    },
    "papermill": {
     "duration": 1.873945,
     "end_time": "2024-09-07T23:20:49.822558",
     "exception": false,
     "start_time": "2024-09-07T23:20:47.948613",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # crop augmentation through the extended dataset, crop_factor=0.05\n",
    "# feature, label, start, end = parser(df, noise_factor=0, crop_factor=0.05, snr_dbs=1, shift_factor=0, pitch_factor=0, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_crop1, X_test_crop1, Y_train_crop1, Y_test_crop1 = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train6 = np.concatenate((X_train, X_train_crop1), axis=0)\n",
    "# Y_train6 = np.concatenate((Y_train, Y_train_crop1), axis=0)\n",
    "\n",
    "# model_crop1, train_time_crop1 = train_model(train = True, model_name = \"Model_Crop1\", X_test = X_test, X_train = X_train6, Y_test = Y_test, Y_train = Y_train6, epochs = 90)\n",
    "# train_result_crop1, test_result_crop1, eval_time_crop1 = train_test_accuracy(model_crop1, X_train6, X_test, Y_train6, Y_test)\n",
    "# time_elapsed_crop1_aug = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_crop1_aug)\n",
    "# print(train_time_crop1)\n",
    "# print(eval_time_crop1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "437f71d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:53.683822Z",
     "iopub.status.busy": "2024-09-07T23:20:53.683059Z",
     "iopub.status.idle": "2024-09-07T23:20:53.687802Z",
     "shell.execute_reply": "2024-09-07T23:20:53.686957Z"
    },
    "papermill": {
     "duration": 1.896778,
     "end_time": "2024-09-07T23:20:53.689766",
     "exception": false,
     "start_time": "2024-09-07T23:20:51.792988",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # crop augmentation through the extended dataset, crop_factor=0.1\n",
    "# feature, label, start, end = parser(df, noise_factor=0, crop_factor=0.1, snr_dbs=1, shift_factor=0, pitch_factor=0, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_crop2, X_test_crop2, Y_train_crop2, Y_test_crop2 = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train7 = np.concatenate((X_train, X_train_crop2), axis=0)\n",
    "# Y_train7 = np.concatenate((Y_train, Y_train_crop2), axis=0)\n",
    "\n",
    "# model_crop2, train_time_crop2 = train_model(train = True, model_name = \"Model_Crop2\", X_test = X_test, X_train = X_train7, Y_test = Y_test, Y_train = Y_train7, epochs = 90)\n",
    "# train_result_crop2, test_result_crop2, eval_time_crop2 = train_test_accuracy(model_crop2, X_train7, X_test, Y_train7, Y_test)\n",
    "# time_elapsed_crop2_aug = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_crop2_aug)\n",
    "# print(train_time_crop2)\n",
    "# print(eval_time_crop2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ba2d4b7f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:20:57.485595Z",
     "iopub.status.busy": "2024-09-07T23:20:57.484750Z",
     "iopub.status.idle": "2024-09-07T23:20:57.489853Z",
     "shell.execute_reply": "2024-09-07T23:20:57.488948Z"
    },
    "papermill": {
     "duration": 1.865742,
     "end_time": "2024-09-07T23:20:57.491804",
     "exception": false,
     "start_time": "2024-09-07T23:20:55.626062",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # reflection augmentation through the extended dataset, refl_factor=0.05\n",
    "# feature, label, start, end = parser(df, noise_factor=0, added_shift_factor=0.05, snr_dbs=1, shift_factor=0, pitch_factor=0, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_refl, X_test_refl, Y_train_refl, Y_test_refl = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train8 = np.concatenate((X_train, X_train_refl), axis=0)\n",
    "# Y_train8 = np.concatenate((Y_train, Y_train_refl), axis=0)\n",
    "\n",
    "# model_refl1, train_time_refl1 = train_model(train = True, model_name = \"Model_Refl1\", X_test = X_test, X_train = X_train8, Y_test = Y_test, Y_train = Y_train8, epochs = 90)\n",
    "# train_result_refl1, test_result_refl1, eval_time_refl1 = train_test_accuracy(model_refl1, X_train8, X_test, Y_train8, Y_test)\n",
    "# time_elapsed_refl1_aug = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_refl1_aug)\n",
    "# print(train_time_refl1)\n",
    "# print(eval_time_refl1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "fe880496",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:01.376778Z",
     "iopub.status.busy": "2024-09-07T23:21:01.376058Z",
     "iopub.status.idle": "2024-09-07T23:21:01.380858Z",
     "shell.execute_reply": "2024-09-07T23:21:01.379967Z"
    },
    "papermill": {
     "duration": 1.948884,
     "end_time": "2024-09-07T23:21:01.382868",
     "exception": false,
     "start_time": "2024-09-07T23:20:59.433984",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # reflection augmentation through the extended dataset, refl_factor=0.1\n",
    "# feature, label, start, end = parser(df, noise_factor=0, added_shift_factor=0.1, snr_dbs=1, shift_factor=0, pitch_factor=0, speed_rate=1, decimal = True, aug = True)\n",
    "# X_train_refl2, X_test_refl2, Y_train_refl2, Y_test_refl2 = prepare_data(feature, label)\n",
    "\n",
    "# #extension for the training, p.s. validation should stay the same as it was in the no augmentation case for comparison\n",
    "# X_train9 = np.concatenate((X_train, X_train_refl2), axis=0)\n",
    "# Y_train9 = np.concatenate((Y_train, Y_train_refl2), axis=0)\n",
    "\n",
    "# model_refl2, train_time_refl2 = train_model(train = True, model_name = \"Model_Refl2\", X_test = X_test, X_train = X_train9, Y_test = Y_test, Y_train = Y_train9, epochs = 90)\n",
    "# train_result_refl2, test_result_refl2, eval_time_refl2 = train_test_accuracy(model_refl2, X_train9, X_test, Y_train9, Y_test)\n",
    "# time_elapsed_refl2_aug = (end-start)/60\n",
    "\n",
    "# print(time_elapsed_refl2_aug)\n",
    "# print(train_time_refl2)\n",
    "# print(eval_time_refl2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f807a1af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:05.200529Z",
     "iopub.status.busy": "2024-09-07T23:21:05.200191Z",
     "iopub.status.idle": "2024-09-07T23:21:05.205697Z",
     "shell.execute_reply": "2024-09-07T23:21:05.204787Z"
    },
    "papermill": {
     "duration": 1.936096,
     "end_time": "2024-09-07T23:21:05.207571",
     "exception": false,
     "start_time": "2024-09-07T23:21:03.271475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # sample = [noise_flag, noise_factor, shift_factor, pitch_factor, speed_factor] below\n",
    "# noise_control_list = [[1,0,0,0,1], [1,5,0,0,1], [1,10,0,0,1], [1,15,0,0,1], [1,20,0,0,1]] \n",
    "# shift_control_list = [[0,1,0.05,0,1], [0,1,0.15,0,1], [0,1,0.35,0,1]]\n",
    "# pitch_control_list = [[0,1,0,0.1,1], [0,1,0,0.25,1], [0,1,0,0.5,1], [0,1,0,1,1]] \n",
    "# time_stretch_control_list = [[0,1,0,0,.90], [0,1,0,0,1.05], [0,1,0,0,1.10]]\n",
    "\n",
    "\n",
    "# sample_list = [noise_control_list, shift_control_list, pitch_control_list, time_stretch_control_list]\n",
    "\n",
    "# train_acc, valid_acc, dataprep_time_listed, eval_time_listed = [],[],[],[]\n",
    "\n",
    "# for control in sample_list:\n",
    "#     for sample in control:\n",
    "\n",
    "#         # separating the data into features and labels for further operation\n",
    "#         feature, label, start, end = parser(df, noise_factor=sample[0], snr_dbs=sample[1], shift_factor=sample[2], pitch_factor=sample[3], speed_rate=sample[4], decimal = True, aug = True)\n",
    "\n",
    "#         # preparation of the train and test data\n",
    "#         X_train, X_test, Y_train, Y_test = prepare_data(feature, label)\n",
    "\n",
    "#         # calling the existing model trained without any augmentation method utilized\n",
    "#         model = train_model(train = False, model_name = \"Original_Model.keras\")\n",
    "\n",
    "#         # accuracy attainment\n",
    "#         train_result, test_result, eval_time = train_test_accuracy(model, X_train, X_test, Y_train, Y_test)\n",
    "\n",
    "#         time_elapsed = (end-start)/60\n",
    "#         print(time_elapsed)\n",
    "#         print(eval_time)\n",
    "\n",
    "#         train_acc.append(train_result)\n",
    "#         valid_acc.append(test_result)\n",
    "#         dataprep_time_listed.append(time_elapsed)\n",
    "#         eval_time_listed.append(eval_time)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "00ce852d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:09.052794Z",
     "iopub.status.busy": "2024-09-07T23:21:09.052402Z",
     "iopub.status.idle": "2024-09-07T23:21:09.057985Z",
     "shell.execute_reply": "2024-09-07T23:21:09.057064Z"
    },
    "papermill": {
     "duration": 1.969065,
     "end_time": "2024-09-07T23:21:09.060047",
     "exception": false,
     "start_time": "2024-09-07T23:21:07.090982",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # alternative data augmentation methods, inspired by more complex methods and possible scenarios in real life\n",
    "# # sample = [noise_flag, noise_factor, crop_factor, added_shift_factor, shift_factor, pitch_factor, speed_factor] below\n",
    "# data_crop_control_list = [[0,1,0.05,0,0,0,1], [0,1,0.1,0,0,0,1], [0,1,0.2,0,0,0,1], [0,1,0.5,0,0,0,1]]\n",
    "# reflect_control_list = [[0,1,0,0.05,0,0,1], [0,1,0,0.1,0,0,1], [0,1,0,0.2,0,0,1], [0,1,0,0.5,0,0,1]]\n",
    "\n",
    "# sample_list = [data_crop_control_list, reflect_control_list]\n",
    "# alt_train_acc, alt_valid_acc, alt_dataprep_time_listed, alt_eval_time_listed = [],[],[],[]\n",
    "\n",
    "# for control in sample_list:\n",
    "#     for sample in control:\n",
    "\n",
    "#         # separating the data into features and labels for further operation\n",
    "#         feature, label, start, end = parser(df, noise_factor=sample[0], snr_dbs=sample[1], crop_factor=sample[2], added_shift_factor=sample[3], shift_factor=sample[4], pitch_factor=sample[5], speed_rate=sample[6], decimal = True, aug = True)\n",
    "\n",
    "#         # preparation of the train and test data\n",
    "#         X_train, X_test, Y_train, Y_test = prepare_data(feature, label)\n",
    "\n",
    "#         # calling the existing model trained without any augmentation method utilized\n",
    "#         model = train_model(train = False, model_name = \"Original_Model.keras\")\n",
    "\n",
    "#         # accuracy attainment\n",
    "#         train_result, test_result, eval_time = train_test_accuracy(model, X_train, X_test, Y_train, Y_test)\n",
    "\n",
    "#         time_elapsed = (end-start)/60\n",
    "#         print(time_elapsed)\n",
    "#         print(eval_time)\n",
    "\n",
    "#         alt_train_acc.append(train_result)\n",
    "#         alt_valid_acc.append(test_result)\n",
    "#         alt_dataprep_time_listed.append(time_elapsed)\n",
    "#         alt_eval_time_listed.append(eval_time)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "e6b169dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:12.892976Z",
     "iopub.status.busy": "2024-09-07T23:21:12.892597Z",
     "iopub.status.idle": "2024-09-07T23:21:12.897618Z",
     "shell.execute_reply": "2024-09-07T23:21:12.896542Z"
    },
    "papermill": {
     "duration": 1.890969,
     "end_time": "2024-09-07T23:21:12.899618",
     "exception": false,
     "start_time": "2024-09-07T23:21:11.008649",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# test_results_dict = {\n",
    "#     'Samples':['NoAugmentation', \n",
    "#                 'Noise, SNR=0dB', 'Noise, SNR=5dB', 'Noise, SNR=10dB', 'Noise, SNR=15dB', 'Noise, SNR=20dB',\n",
    "#                 'Shifted, 5%', 'Shifted, 15%', 'Shifted, 35%',\n",
    "#                 'Pitch Changed, 0.1semiNote', 'Pitch Changed, 0.25semiNote', 'Pitch Changed, 0.5semiNote', 'Pitch Changed, 1semiNote',\n",
    "#                 'Time-Stretched, -10%', 'Time-Stretched, +5%', 'Time-Stretched, +10%'],\n",
    "#     'Training Accuracy': [train_result_noaug] + train_acc,\n",
    "#     'Validation Accuracy': [test_result_noaug] + valid_acc,\n",
    "#     'Data Creation Time': [time_elapsed_no_aug] + dataprep_time_listed,\n",
    "#     'Evaluation Time': [eval_time_noaug] + eval_time_listed\n",
    "# }\n",
    "# test_results = pd.DataFrame(test_results_dict)\n",
    "# test_results.set_index(\"Samples\")\n",
    "\n",
    "# print(test_results)\n",
    "# test_results.to_csv(\"Efficient_Augmentation_Selection_Results.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "683cac80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:16.796972Z",
     "iopub.status.busy": "2024-09-07T23:21:16.796616Z",
     "iopub.status.idle": "2024-09-07T23:21:16.801913Z",
     "shell.execute_reply": "2024-09-07T23:21:16.801028Z"
    },
    "papermill": {
     "duration": 1.952796,
     "end_time": "2024-09-07T23:21:16.803719",
     "exception": false,
     "start_time": "2024-09-07T23:21:14.850923",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # augmentation parameter declaration for testing purposes\n",
    "# # augmentation_list_format = [noise_flag, crop_freq_time_flag, noise_factor, shift_factor, pitch_factor, speed_rate, time_or_freq_crop_factor, reflection_factor]\n",
    "# # crop_freq_time_flag=1 for data cropping in freq domain; crop_freq_time_flag=0 for data cropping in time domain\n",
    "# # each type of augmentation has its first value element as the index in the base augmentation list\n",
    "\n",
    "# augmentation_dict = {}\n",
    "# augmentation_dict['noise_factor'] = [2, 0, 5, 10, 12, 15, 20]\n",
    "# augmentation_dict['shift_factor'] = [3, 0.05, 0.15, 0.35] # [0,1] interval\n",
    "# augmentation_dict['pitch_factor'] = [4, 0.05, 0.10, 0.25, 0.50, 1]\n",
    "# augmentation_dict['speed_rate'] = [5, 0.90, 0.95, 1.1]\n",
    "# augmentation_dict['time_crop_factor'] = [6, 0.05, 0.10, 0.20, 0.50] # [0,1] interval\n",
    "# augmentation_dict['freq_crop_factor'] = [6, 0.05, 0.10, 0.20, 0.50] # [0,1] interval\n",
    "# augmentation_dict['reflection_factor'] = [7,0.05, 0.10, 0.20, 0.50] # [0,1] interval\n",
    "# base_augmentation_list = [0, 1, 0, 0, 0, 1, 0, 0]\n",
    "\n",
    "# # to ease the creation of the index list for the .csv file\n",
    "# def factor_percentage(factor):\n",
    "#     \"\"\"\n",
    "#     percentage calculator for factors in the [0,2] interval\n",
    "#     \"\"\"\n",
    "#     if factor >=1:\n",
    "#         return f\"{(factor-1)*100:.2f}\" + '%'\n",
    "#     else:\n",
    "#         return f\"{(factor-1)*100:.2f}\" + '%'\n",
    "\n",
    "# def pos_factor_percentage(factor):\n",
    "#     \"\"\"\n",
    "#     percentage calculator for factors in the [0,1] interval\n",
    "#     \"\"\"\n",
    "#     return f\"{factor*100:.2f}\" + '%'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d82f5e8a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:20.614564Z",
     "iopub.status.busy": "2024-09-07T23:21:20.614197Z",
     "iopub.status.idle": "2024-09-07T23:21:20.621409Z",
     "shell.execute_reply": "2024-09-07T23:21:20.620559Z"
    },
    "papermill": {
     "duration": 1.95456,
     "end_time": "2024-09-07T23:21:20.623237",
     "exception": false,
     "start_time": "2024-09-07T23:21:18.668677",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # accuracy testing per modified augmentation list, which has only one value changed at a time\n",
    "# # augmentation_list_format = [noise_flag, crop_freq_time_flag, noise_factor, shift_factor, pitch_factor, speed_rate, time_or_freq_crop_factor, reflection_factor]\n",
    "# # crop_freq_time_flag=1 for data cropping in freq domain; crop_freq_time_flag=0 for data cropping in time domain\n",
    "# # each type of augmentation has its first value element as the index in the base augmentation list\n",
    "\n",
    "# validation_acc_list, train_acc_list, dataprep_time_list, eval_time_list = [],[],[],[]\n",
    "# # list for final dataFrame indices\n",
    "# samples_list = []\n",
    "# test_counter = 0\n",
    "# for aug_method in augmentation_dict.keys():\n",
    "#     aug_idx = augmentation_dict[aug_method][0]\n",
    "#     dummy_idx = 0\n",
    "#     for aug_value in augmentation_dict[aug_method]:\n",
    "#         if dummy_idx != 0:\n",
    "#             test_counter += 1\n",
    "#             modified_augmentation_list = base_augmentation_list.copy()\n",
    "#             modified_augmentation_list[aug_idx] = aug_value\n",
    "            \n",
    "#             noise_flag = 1 if (aug_method == 'noise_factor') else 0\n",
    "#             crop_freq_time_flag = 0 if (aug_method == 'time_crop_factor') else 1\n",
    "#             modified_augmentation_list[0] = noise_flag\n",
    "#             modified_augmentation_list[1] = crop_freq_time_flag\n",
    "#             [noise_factor, shift_factor, pitch_factor, speed_rate, time_or_freq_crop_factor, reflection_factor] = modified_augmentation_list[2:]\n",
    "            \n",
    "            \n",
    "#             # data preparation and testing\n",
    "#             # extract the feature and label arrays\n",
    "#             feature, label, start, end = parser(df, noise_factor=noise_flag, crop_freq=crop_freq_time_flag, snr_dbs=noise_factor,\n",
    "#                                                     shift_factor=shift_factor, pitch_factor=pitch_factor, speed_rate=speed_rate,\n",
    "#                                                     crop_factor=time_or_freq_crop_factor, added_shift_factor=reflection_factor, decimal = True, aug = True)\n",
    "\n",
    "#             # prepare the train and test data\n",
    "#             X_train, X_test, Y_train, Y_test = prepare_data(feature, label)\n",
    " \n",
    "#             #  call the not_augmented model for testing\n",
    "#             model = train_model(train = False, model_name = \"Original_Model.keras\")\n",
    "\n",
    "#             # attain the accuracy results\n",
    "#             train_result, test_result, eval_time = train_test_accuracy(model, X_train, X_test, Y_train, Y_test)\n",
    "            \n",
    "#             #show the time elapsed for further analysis\n",
    "#             dataprep_time = (end-start)/60\n",
    "#             print(dataprep_time)\n",
    "#             print(eval_time)\n",
    "\n",
    "#             # accrue the data\n",
    "#             validation_acc_list.append(test_result)\n",
    "#             train_acc_list.append(train_result)\n",
    "#             dataprep_time_list.append(dataprep_time)\n",
    "#             eval_time_list.append(eval_time)\n",
    "\n",
    "#             samples_list_dict = {'noise_factor':'Noise', 'shift_factor':'Shift_Factor', 'pitch_factor':'Pitch_Change', 'speed_rate':'Time_Stretched',\n",
    "#                                  'time_crop_factor':'Time_DataCrop_Factor', 'freq_crop_factor':'Freq_DataCrop_Factor', 'reflection_factor':'Reflection_Factor'}\n",
    "#             # if noise is augmented, put units at the end of the samples_list element\n",
    "#             unit_list_dict = {'noise_factor':'dBs', 'shift_factor':'', 'pitch_factor':' semiNote', 'speed_rate':'',\n",
    "#                                  'time_crop_factor':'', 'freq_crop_factor':'', 'reflection_factor':''}\n",
    "#             # value format separation works if the decimal factors are put in the format z.xy..., due to the basic slicing\n",
    "#             augmentation_value_dict = {'noise_factor':'SNR:' + str(aug_value), 'shift_factor':pos_factor_percentage(aug_value), 'pitch_factor':str(aug_value), 'speed_rate':factor_percentage(aug_value),\n",
    "#                                  'time_crop_factor':pos_factor_percentage(aug_value), 'freq_crop_factor':pos_factor_percentage(aug_value), 'reflection_factor':pos_factor_percentage(aug_value)}\n",
    "#             samples_list.append(samples_list_dict[aug_method] + ', ' + augmentation_value_dict[aug_method] + unit_list_dict[aug_method])\n",
    "            \n",
    "        \n",
    "#         dummy_idx += 1\n",
    "\n",
    "# print(len(samples_list), test_counter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "cc729db2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:24.454152Z",
     "iopub.status.busy": "2024-09-07T23:21:24.453792Z",
     "iopub.status.idle": "2024-09-07T23:21:24.458283Z",
     "shell.execute_reply": "2024-09-07T23:21:24.457426Z"
    },
    "papermill": {
     "duration": 1.937653,
     "end_time": "2024-09-07T23:21:24.460196",
     "exception": false,
     "start_time": "2024-09-07T23:21:22.522543",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# for the test results of the not-augmented model on augmented datasets, to check the not-augmented model performance\n",
    "# test_results_dict = {\n",
    "#     'Samples':['NoAugmentation'] + samples_list,\n",
    "#     'Validation Accuracy': [test_result_noaug] + validation_acc_list,\n",
    "#     'Training Accuracy': [train_result_noaug] + train_acc_list,\n",
    "#     'Data Creation Time': [time_elapsed_no_aug] + dataprep_time_list,\n",
    "#     'Evaluation Time': [eval_time_noaug] + eval_time_list\n",
    "# }\n",
    "# test_results = pd.DataFrame(test_results_dict)\n",
    "# test_results.set_index(\"Samples\")\n",
    "\n",
    "# print(test_results)\n",
    "# test_results.to_csv(\"Efficient_Augmentation_Selection_Results.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "0ce61903",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-07T23:21:28.255480Z",
     "iopub.status.busy": "2024-09-07T23:21:28.255112Z",
     "iopub.status.idle": "2024-09-07T23:21:28.270892Z",
     "shell.execute_reply": "2024-09-07T23:21:28.269872Z"
    },
    "papermill": {
     "duration": 1.95697,
     "end_time": "2024-09-07T23:21:28.273202",
     "exception": false,
     "start_time": "2024-09-07T23:21:26.316232",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Samples': ['NoAugmentation', 'Noised_12dBs', 'Noised_20dBs', 'Pitched_0.1', 'Pitched_0.25', 'Pitched_0.5', 'Sped_1.1', 'FreqCropped_0.05', 'FreqCropped_0.1', 'TimeCropped_0.05', 'TimeCropped_0.1', 'Reflected_0.05', 'Reflected_0.1'], 'Validation Accuracy': [0.8712780475616455, 0.8666971921920776, 0.8685295581817627, 0.8808978199958801, 0.8776912689208984, 0.8561612367630005, 0.8781493306159973, 0.8653229475021362, 0.8653229475021362, 0.8776912689208984, 0.8841044306755066, 0.8708199858665466, 0.8726522922515869], 'Training Accuracy': [0.9919071793556213, 0.9945029616355896, 0.995113730430603, 0.9935867786407471, 0.9923652410507202, 0.9877080321311951, 0.9944266080856323, 0.9923652410507202, 0.9945029616355896, 0.9965643882751465, 0.9954954981803894, 0.9941976070404053, 0.9954954981803894], 'Data Creation Time': [18.09130301872889, 17.150731575489043, 16.988202039400736, 23.638467240333558, 23.383634253342947, 22.48821877638499, 21.191642900307972, 15.46851323445638, 15.429506234327953, 15.525006198883057, 15.470872120062511, 15.64702537059784, 15.624130733807881], 'Evaluation Time': [0.054945977528889973, 0.059616545836130776, 0.05826936960220337, 0.04930709997812907, 0.047875078519185384, 0.0483783483505249, 0.053617668151855466, 0.047802285353342695, 0.04738357861836751, 0.04833710193634033, 0.05185682376225789, 0.04929679234822591, 0.04798645973205566], 'Training Time': [1.0985614617665609, 1.752876615524292, 1.738558042049408, 1.73565886815389, 1.6994065999984742, 1.7066680431365966, 1.6905009508132935, 1.7048334042231241, 1.7035014192263285, 1.7090173403422038, 1.7122194131215414, 1.710021682580312, 1.7192434867223103]}\n"
     ]
    }
   ],
   "source": [
    "# for the augmented-model training results, to check how each augmentation method affects the accuracy values and time periods\n",
    "aug_models_results_dict = {\n",
    "    'Samples':['NoAugmentation'] + aug_model_samples_list,\n",
    "    'Validation Accuracy': [test_result_noaug] + aug_models_validation_acc_list,\n",
    "    'Training Accuracy': [train_result_noaug] + aug_models_train_acc_list,\n",
    "    'Data Creation Time': [time_elapsed_no_aug] + aug_models_dataprep_time_list,\n",
    "    'Evaluation Time': [eval_time_noaug] + aug_models_eval_time_list,\n",
    "    'Training Time' : [train_time_noaug] + aug_models_train_time_list\n",
    "}\n",
    "test_results = pd.DataFrame(aug_models_results_dict)\n",
    "test_results.set_index(\"Samples\")\n",
    "\n",
    "print(aug_models_results_dict)\n",
    "test_results.to_csv(\"Augmented_Model_Results.csv\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 500970,
     "sourceId": 928025,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5518832,
     "sourceId": 9332754,
     "sourceType": "datasetVersion"
    },
    {
     "sourceId": 24385415,
     "sourceType": "kernelVersion"
    },
    {
     "sourceId": 195300738,
     "sourceType": "kernelVersion"
    }
   ],
   "dockerImageVersionId": 30746,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 15618.833908,
   "end_time": "2024-09-07T23:21:33.958620",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-07T19:01:15.124712",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
